Created by PLY version 3.0 (http://www.dabeaz.com/ply)

Grammar

Rule 1     S' -> start
Rule 2     start -> definition_list
Rule 3     class_definition -> attributes_opt CLASS ID base_class { member_definition_list } ;
Rule 4     base_class -> empty
Rule 5     base_class -> : type
Rule 6     attributes_opt -> empty
Rule 7     attributes_opt -> [ attribute_list_opt ]
Rule 8     attributes_opt -> documentation_value [ attribute_list_opt ]
Rule 9     attributes_opt -> documentation_value
Rule 10    attribute_list_opt -> empty
Rule 11    attribute_list_opt -> attribute_list
Rule 12    attribute_list -> attribute
Rule 13    attribute_list -> attribute_list , attribute
Rule 14    attribute -> attrid attribute_value
Rule 15    attribute_value -> empty
Rule 16    attribute_value -> = attrid
Rule 17    attrid -> ID
Rule 18    attrid -> QUALIFIER
Rule 19    attrid -> STRING_OPEN text STRING_CLOSE
Rule 20    documentation_value -> DOCUMENTATION_OPEN text DOCUMENTATION_CLOSE
Rule 21    documentation_value -> DOCUMENTATION_OPEN DOCUMENTATION_CLOSE
Rule 22    definition_list -> comments
Rule 23    definition_list -> definition_list definition comments
Rule 24    definition -> function_definition
Rule 25    definition -> variable_definition
Rule 26    definition -> typename_definition
Rule 27    definition -> typedef_definition
Rule 28    definition -> class_definition
Rule 29    definition -> enum_definition
Rule 30    definition -> callback_definition
Rule 31    definition -> namespace_definition
Rule 32    definition -> verbatim_block
Rule 33    member_definition_list -> comments
Rule 34    member_definition_list -> member_definition_list member_definition comments
Rule 35    member_definition -> function_definition
Rule 36    member_definition -> constructor_definition
Rule 37    member_definition -> variable_definition
Rule 38    member_definition -> typename_definition
Rule 39    member_definition -> typedef_definition
Rule 40    member_definition -> class_definition
Rule 41    member_definition -> enum_definition
Rule 42    member_definition -> callback_definition
Rule 43    member_definition -> verbatim_block
Rule 44    comments -> empty
Rule 45    comments -> comments comment
Rule 46    comment -> COMMENT_OPEN text COMMENT_CLOSE
Rule 47    verbatim_block -> attributes_opt VERBATIM_OPEN text VERBATIM_CLOSE
Rule 48    text -> text_list
Rule 49    text_list -> empty
Rule 50    text_list -> text_list TEXT
Rule 51    typedef_definition -> attributes_opt TYPEDEF type ID ;
Rule 52    typename_definition -> attributes_opt TYPENAME ID ;
Rule 53    variable_definition -> attributes_opt type ID ;
Rule 54    function_definition -> attributes_opt type ID ( param_list_opt ) ;
Rule 55    callback_definition -> attributes_opt CALLBACK type ID ( param_list_opt ) ;
Rule 56    constructor_definition -> attributes_opt ID ( param_list_opt ) ;
Rule 57    param_list_opt -> empty
Rule 58    param_list_opt -> param_list
Rule 59    param_list -> param
Rule 60    param_list -> param_list , param
Rule 61    param -> type ID
Rule 62    enum_definition -> attributes_opt ENUM ID { enum_values } ;
Rule 63    enum_values -> enum_value
Rule 64    enum_values -> enum_values , enum_value
Rule 65    enum_value -> ID
Rule 66    enum_value -> ID = NUMBER
Rule 67    namespace_definition -> attributes_opt NAMESPACE ID { definition_list }
Rule 68    type -> type_reference
Rule 69    type -> QUALIFIER type
Rule 70    type_reference -> type_name
Rule 71    type_reference -> scoped_type_reference
Rule 72    type_reference -> unsized_array_type_reference
Rule 73    type_reference -> sized_array_type_reference
Rule 74    type_reference -> nullable_type_reference
Rule 75    type_name -> ID
Rule 76    type_name -> SIGNED ID
Rule 77    scoped_type_reference -> ID : : type_reference
Rule 78    unsized_array_type_reference -> type_reference [ ]
Rule 79    sized_array_type_reference -> type_reference [ NUMBER ]
Rule 80    nullable_type_reference -> type_reference ?
Rule 81    empty -> <empty>

Terminals, with rules where they appear

(                    : 53 54 55
)                    : 53 54 55
,                    : 12 59 63
:                    : 4 76 76
;                    : 2 50 51 52 53 54 55 61
=                    : 15 65
?                    : 79
CALLBACK             : 54
CLASS                : 2
COMMENT_CLOSE        : 45
COMMENT_OPEN         : 45
DOCUMENTATION_CLOSE  : 19 20
DOCUMENTATION_OPEN   : 19 20
ENUM                 : 61
ID                   : 2 16 50 51 52 53 54 55 60 61 64 65 66 74 75 76
NAMESPACE            : 66
NUMBER               : 65 78
QUALIFIER            : 17 68
SIGNED               : 75
STRING_CLOSE         : 18
STRING_OPEN          : 18
TEXT                 : 49
TYPEDEF              : 50
TYPENAME             : 51
VERBATIM_CLOSE       : 46
VERBATIM_OPEN        : 46
[                    : 6 7 77 78
]                    : 6 7 77 78
error                : 
{                    : 2 61 66
}                    : 2 61 66

Nonterminals, with rules where they appear

attribute            : 11 12
attribute_list       : 10 12
attribute_list_opt   : 6 7
attribute_value      : 13
attributes_opt       : 2 46 50 51 52 53 54 55 61 66
attrid               : 13 15
base_class           : 2
callback_definition  : 29 41
class_definition     : 27 39
comment              : 44
comments             : 21 22 32 33 44
constructor_definition : 35
definition           : 22
definition_list      : 1 22 66
documentation_value  : 7 8
empty                : 3 5 9 14 43 48 56
enum_definition      : 28 40
enum_value           : 62 63
enum_values          : 61 63
function_definition  : 23 34
member_definition    : 33
member_definition_list : 2 33
namespace_definition : 30
nullable_type_reference : 73
param                : 58 59
param_list           : 57 59
param_list_opt       : 53 54 55
scoped_type_reference : 70
sized_array_type_reference : 72
start                : 0
text                 : 18 19 45 46
text_list            : 47 49
type                 : 4 50 52 53 54 60 68
type_name            : 69
type_reference       : 67 76 77 78 79
typedef_definition   : 26 38
typename_definition  : 25 37
unsized_array_type_reference : 71
variable_definition  : 24 36
verbatim_block       : 31 42

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . definition_list
    (21) definition_list -> . comments
    (22) definition_list -> . definition_list definition comments
    (43) comments -> . empty
    (44) comments -> . comments comment
    (80) empty -> .

    COMMENT_OPEN    reduce using rule 80 (empty -> .)
    [               reduce using rule 80 (empty -> .)
    DOCUMENTATION_OPEN reduce using rule 80 (empty -> .)
    TYPENAME        reduce using rule 80 (empty -> .)
    TYPEDEF         reduce using rule 80 (empty -> .)
    CLASS           reduce using rule 80 (empty -> .)
    ENUM            reduce using rule 80 (empty -> .)
    CALLBACK        reduce using rule 80 (empty -> .)
    NAMESPACE       reduce using rule 80 (empty -> .)
    VERBATIM_OPEN   reduce using rule 80 (empty -> .)
    QUALIFIER       reduce using rule 80 (empty -> .)
    ID              reduce using rule 80 (empty -> .)
    SIGNED          reduce using rule 80 (empty -> .)
    $end            reduce using rule 80 (empty -> .)

    definition_list                shift and go to state 1
    comments                       shift and go to state 2
    start                          shift and go to state 3
    empty                          shift and go to state 4

state 1

    (1) start -> definition_list .
    (22) definition_list -> definition_list . definition comments
    (23) definition -> . function_definition
    (24) definition -> . variable_definition
    (25) definition -> . typename_definition
    (26) definition -> . typedef_definition
    (27) definition -> . class_definition
    (28) definition -> . enum_definition
    (29) definition -> . callback_definition
    (30) definition -> . namespace_definition
    (31) definition -> . verbatim_block
    (53) function_definition -> . attributes_opt type ID ( param_list_opt ) ;
    (52) variable_definition -> . attributes_opt type ID ;
    (51) typename_definition -> . attributes_opt TYPENAME ID ;
    (50) typedef_definition -> . attributes_opt TYPEDEF type ID ;
    (2) class_definition -> . attributes_opt CLASS ID base_class { member_definition_list } ;
    (61) enum_definition -> . attributes_opt ENUM ID { enum_values } ;
    (54) callback_definition -> . attributes_opt CALLBACK type ID ( param_list_opt ) ;
    (66) namespace_definition -> . attributes_opt NAMESPACE ID { definition_list }
    (46) verbatim_block -> . attributes_opt VERBATIM_OPEN text VERBATIM_CLOSE
    (5) attributes_opt -> . empty
    (6) attributes_opt -> . [ attribute_list_opt ]
    (7) attributes_opt -> . documentation_value [ attribute_list_opt ]
    (8) attributes_opt -> . documentation_value
    (80) empty -> .
    (19) documentation_value -> . DOCUMENTATION_OPEN text DOCUMENTATION_CLOSE
    (20) documentation_value -> . DOCUMENTATION_OPEN DOCUMENTATION_CLOSE

    $end            reduce using rule 1 (start -> definition_list .)
    [               shift and go to state 13
    TYPENAME        reduce using rule 80 (empty -> .)
    TYPEDEF         reduce using rule 80 (empty -> .)
    CLASS           reduce using rule 80 (empty -> .)
    ENUM            reduce using rule 80 (empty -> .)
    CALLBACK        reduce using rule 80 (empty -> .)
    NAMESPACE       reduce using rule 80 (empty -> .)
    VERBATIM_OPEN   reduce using rule 80 (empty -> .)
    QUALIFIER       reduce using rule 80 (empty -> .)
    ID              reduce using rule 80 (empty -> .)
    SIGNED          reduce using rule 80 (empty -> .)
    DOCUMENTATION_OPEN shift and go to state 5

    typename_definition            shift and go to state 6
    variable_definition            shift and go to state 7
    callback_definition            shift and go to state 8
    attributes_opt                 shift and go to state 9
    documentation_value            shift and go to state 17
    typedef_definition             shift and go to state 10
    namespace_definition           shift and go to state 11
    empty                          shift and go to state 12
    definition                     shift and go to state 14
    function_definition            shift and go to state 15
    enum_definition                shift and go to state 16
    verbatim_block                 shift and go to state 18
    class_definition               shift and go to state 19

state 2

    (21) definition_list -> comments .
    (44) comments -> comments . comment
    (45) comment -> . COMMENT_OPEN text COMMENT_CLOSE

    }               reduce using rule 21 (definition_list -> comments .)
    [               reduce using rule 21 (definition_list -> comments .)
    DOCUMENTATION_OPEN reduce using rule 21 (definition_list -> comments .)
    TYPENAME        reduce using rule 21 (definition_list -> comments .)
    TYPEDEF         reduce using rule 21 (definition_list -> comments .)
    CLASS           reduce using rule 21 (definition_list -> comments .)
    ENUM            reduce using rule 21 (definition_list -> comments .)
    CALLBACK        reduce using rule 21 (definition_list -> comments .)
    NAMESPACE       reduce using rule 21 (definition_list -> comments .)
    VERBATIM_OPEN   reduce using rule 21 (definition_list -> comments .)
    QUALIFIER       reduce using rule 21 (definition_list -> comments .)
    ID              reduce using rule 21 (definition_list -> comments .)
    SIGNED          reduce using rule 21 (definition_list -> comments .)
    $end            reduce using rule 21 (definition_list -> comments .)
    COMMENT_OPEN    shift and go to state 21

    comment                        shift and go to state 20

state 3

    (0) S' -> start .



state 4

    (43) comments -> empty .

    COMMENT_OPEN    reduce using rule 43 (comments -> empty .)
    }               reduce using rule 43 (comments -> empty .)
    [               reduce using rule 43 (comments -> empty .)
    DOCUMENTATION_OPEN reduce using rule 43 (comments -> empty .)
    ID              reduce using rule 43 (comments -> empty .)
    TYPENAME        reduce using rule 43 (comments -> empty .)
    TYPEDEF         reduce using rule 43 (comments -> empty .)
    CLASS           reduce using rule 43 (comments -> empty .)
    ENUM            reduce using rule 43 (comments -> empty .)
    CALLBACK        reduce using rule 43 (comments -> empty .)
    VERBATIM_OPEN   reduce using rule 43 (comments -> empty .)
    QUALIFIER       reduce using rule 43 (comments -> empty .)
    SIGNED          reduce using rule 43 (comments -> empty .)
    NAMESPACE       reduce using rule 43 (comments -> empty .)
    $end            reduce using rule 43 (comments -> empty .)


state 5

    (19) documentation_value -> DOCUMENTATION_OPEN . text DOCUMENTATION_CLOSE
    (20) documentation_value -> DOCUMENTATION_OPEN . DOCUMENTATION_CLOSE
    (47) text -> . text_list
    (48) text_list -> . empty
    (49) text_list -> . text_list TEXT
    (80) empty -> .

  ! shift/reduce conflict for DOCUMENTATION_CLOSE resolved as shift
    DOCUMENTATION_CLOSE shift and go to state 23
    TEXT            reduce using rule 80 (empty -> .)

  ! DOCUMENTATION_CLOSE [ reduce using rule 80 (empty -> .) ]

    text                           shift and go to state 22
    empty                          shift and go to state 25
    text_list                      shift and go to state 24

state 6

    (25) definition -> typename_definition .

    COMMENT_OPEN    reduce using rule 25 (definition -> typename_definition .)
    }               reduce using rule 25 (definition -> typename_definition .)
    [               reduce using rule 25 (definition -> typename_definition .)
    DOCUMENTATION_OPEN reduce using rule 25 (definition -> typename_definition .)
    TYPENAME        reduce using rule 25 (definition -> typename_definition .)
    TYPEDEF         reduce using rule 25 (definition -> typename_definition .)
    CLASS           reduce using rule 25 (definition -> typename_definition .)
    ENUM            reduce using rule 25 (definition -> typename_definition .)
    CALLBACK        reduce using rule 25 (definition -> typename_definition .)
    NAMESPACE       reduce using rule 25 (definition -> typename_definition .)
    VERBATIM_OPEN   reduce using rule 25 (definition -> typename_definition .)
    QUALIFIER       reduce using rule 25 (definition -> typename_definition .)
    ID              reduce using rule 25 (definition -> typename_definition .)
    SIGNED          reduce using rule 25 (definition -> typename_definition .)
    $end            reduce using rule 25 (definition -> typename_definition .)


state 7

    (24) definition -> variable_definition .

    COMMENT_OPEN    reduce using rule 24 (definition -> variable_definition .)
    }               reduce using rule 24 (definition -> variable_definition .)
    [               reduce using rule 24 (definition -> variable_definition .)
    DOCUMENTATION_OPEN reduce using rule 24 (definition -> variable_definition .)
    TYPENAME        reduce using rule 24 (definition -> variable_definition .)
    TYPEDEF         reduce using rule 24 (definition -> variable_definition .)
    CLASS           reduce using rule 24 (definition -> variable_definition .)
    ENUM            reduce using rule 24 (definition -> variable_definition .)
    CALLBACK        reduce using rule 24 (definition -> variable_definition .)
    NAMESPACE       reduce using rule 24 (definition -> variable_definition .)
    VERBATIM_OPEN   reduce using rule 24 (definition -> variable_definition .)
    QUALIFIER       reduce using rule 24 (definition -> variable_definition .)
    ID              reduce using rule 24 (definition -> variable_definition .)
    SIGNED          reduce using rule 24 (definition -> variable_definition .)
    $end            reduce using rule 24 (definition -> variable_definition .)


state 8

    (29) definition -> callback_definition .

    COMMENT_OPEN    reduce using rule 29 (definition -> callback_definition .)
    }               reduce using rule 29 (definition -> callback_definition .)
    [               reduce using rule 29 (definition -> callback_definition .)
    DOCUMENTATION_OPEN reduce using rule 29 (definition -> callback_definition .)
    TYPENAME        reduce using rule 29 (definition -> callback_definition .)
    TYPEDEF         reduce using rule 29 (definition -> callback_definition .)
    CLASS           reduce using rule 29 (definition -> callback_definition .)
    ENUM            reduce using rule 29 (definition -> callback_definition .)
    CALLBACK        reduce using rule 29 (definition -> callback_definition .)
    NAMESPACE       reduce using rule 29 (definition -> callback_definition .)
    VERBATIM_OPEN   reduce using rule 29 (definition -> callback_definition .)
    QUALIFIER       reduce using rule 29 (definition -> callback_definition .)
    ID              reduce using rule 29 (definition -> callback_definition .)
    SIGNED          reduce using rule 29 (definition -> callback_definition .)
    $end            reduce using rule 29 (definition -> callback_definition .)


state 9

    (53) function_definition -> attributes_opt . type ID ( param_list_opt ) ;
    (52) variable_definition -> attributes_opt . type ID ;
    (51) typename_definition -> attributes_opt . TYPENAME ID ;
    (50) typedef_definition -> attributes_opt . TYPEDEF type ID ;
    (2) class_definition -> attributes_opt . CLASS ID base_class { member_definition_list } ;
    (61) enum_definition -> attributes_opt . ENUM ID { enum_values } ;
    (54) callback_definition -> attributes_opt . CALLBACK type ID ( param_list_opt ) ;
    (66) namespace_definition -> attributes_opt . NAMESPACE ID { definition_list }
    (46) verbatim_block -> attributes_opt . VERBATIM_OPEN text VERBATIM_CLOSE
    (67) type -> . type_reference
    (68) type -> . QUALIFIER type
    (69) type_reference -> . type_name
    (70) type_reference -> . scoped_type_reference
    (71) type_reference -> . unsized_array_type_reference
    (72) type_reference -> . sized_array_type_reference
    (73) type_reference -> . nullable_type_reference
    (74) type_name -> . ID
    (75) type_name -> . SIGNED ID
    (76) scoped_type_reference -> . ID : : type_reference
    (77) unsized_array_type_reference -> . type_reference [ ]
    (78) sized_array_type_reference -> . type_reference [ NUMBER ]
    (79) nullable_type_reference -> . type_reference ?

    TYPENAME        shift and go to state 27
    TYPEDEF         shift and go to state 32
    CLASS           shift and go to state 31
    ENUM            shift and go to state 34
    CALLBACK        shift and go to state 42
    NAMESPACE       shift and go to state 35
    VERBATIM_OPEN   shift and go to state 28
    QUALIFIER       shift and go to state 38
    ID              shift and go to state 36
    SIGNED          shift and go to state 40

    unsized_array_type_reference   shift and go to state 37
    type_name                      shift and go to state 26
    nullable_type_reference        shift and go to state 39
    scoped_type_reference          shift and go to state 33
    type_reference                 shift and go to state 41
    sized_array_type_reference     shift and go to state 29
    type                           shift and go to state 30

state 10

    (26) definition -> typedef_definition .

    COMMENT_OPEN    reduce using rule 26 (definition -> typedef_definition .)
    }               reduce using rule 26 (definition -> typedef_definition .)
    [               reduce using rule 26 (definition -> typedef_definition .)
    DOCUMENTATION_OPEN reduce using rule 26 (definition -> typedef_definition .)
    TYPENAME        reduce using rule 26 (definition -> typedef_definition .)
    TYPEDEF         reduce using rule 26 (definition -> typedef_definition .)
    CLASS           reduce using rule 26 (definition -> typedef_definition .)
    ENUM            reduce using rule 26 (definition -> typedef_definition .)
    CALLBACK        reduce using rule 26 (definition -> typedef_definition .)
    NAMESPACE       reduce using rule 26 (definition -> typedef_definition .)
    VERBATIM_OPEN   reduce using rule 26 (definition -> typedef_definition .)
    QUALIFIER       reduce using rule 26 (definition -> typedef_definition .)
    ID              reduce using rule 26 (definition -> typedef_definition .)
    SIGNED          reduce using rule 26 (definition -> typedef_definition .)
    $end            reduce using rule 26 (definition -> typedef_definition .)


state 11

    (30) definition -> namespace_definition .

    COMMENT_OPEN    reduce using rule 30 (definition -> namespace_definition .)
    }               reduce using rule 30 (definition -> namespace_definition .)
    [               reduce using rule 30 (definition -> namespace_definition .)
    DOCUMENTATION_OPEN reduce using rule 30 (definition -> namespace_definition .)
    TYPENAME        reduce using rule 30 (definition -> namespace_definition .)
    TYPEDEF         reduce using rule 30 (definition -> namespace_definition .)
    CLASS           reduce using rule 30 (definition -> namespace_definition .)
    ENUM            reduce using rule 30 (definition -> namespace_definition .)
    CALLBACK        reduce using rule 30 (definition -> namespace_definition .)
    NAMESPACE       reduce using rule 30 (definition -> namespace_definition .)
    VERBATIM_OPEN   reduce using rule 30 (definition -> namespace_definition .)
    QUALIFIER       reduce using rule 30 (definition -> namespace_definition .)
    ID              reduce using rule 30 (definition -> namespace_definition .)
    SIGNED          reduce using rule 30 (definition -> namespace_definition .)
    $end            reduce using rule 30 (definition -> namespace_definition .)


state 12

    (5) attributes_opt -> empty .

    TYPENAME        reduce using rule 5 (attributes_opt -> empty .)
    TYPEDEF         reduce using rule 5 (attributes_opt -> empty .)
    CLASS           reduce using rule 5 (attributes_opt -> empty .)
    ENUM            reduce using rule 5 (attributes_opt -> empty .)
    CALLBACK        reduce using rule 5 (attributes_opt -> empty .)
    NAMESPACE       reduce using rule 5 (attributes_opt -> empty .)
    VERBATIM_OPEN   reduce using rule 5 (attributes_opt -> empty .)
    QUALIFIER       reduce using rule 5 (attributes_opt -> empty .)
    ID              reduce using rule 5 (attributes_opt -> empty .)
    SIGNED          reduce using rule 5 (attributes_opt -> empty .)


state 13

    (6) attributes_opt -> [ . attribute_list_opt ]
    (9) attribute_list_opt -> . empty
    (10) attribute_list_opt -> . attribute_list
    (80) empty -> .
    (11) attribute_list -> . attribute
    (12) attribute_list -> . attribute_list , attribute
    (13) attribute -> . attrid attribute_value
    (16) attrid -> . ID
    (17) attrid -> . QUALIFIER
    (18) attrid -> . STRING_OPEN text STRING_CLOSE

    ]               reduce using rule 80 (empty -> .)
    ID              shift and go to state 48
    QUALIFIER       shift and go to state 50
    STRING_OPEN     shift and go to state 47

    attribute_list_opt             shift and go to state 43
    attribute                      shift and go to state 45
    attribute_list                 shift and go to state 46
    attrid                         shift and go to state 44
    empty                          shift and go to state 49

state 14

    (22) definition_list -> definition_list definition . comments
    (43) comments -> . empty
    (44) comments -> . comments comment
    (80) empty -> .

    COMMENT_OPEN    reduce using rule 80 (empty -> .)
    [               reduce using rule 80 (empty -> .)
    DOCUMENTATION_OPEN reduce using rule 80 (empty -> .)
    TYPENAME        reduce using rule 80 (empty -> .)
    TYPEDEF         reduce using rule 80 (empty -> .)
    CLASS           reduce using rule 80 (empty -> .)
    ENUM            reduce using rule 80 (empty -> .)
    CALLBACK        reduce using rule 80 (empty -> .)
    NAMESPACE       reduce using rule 80 (empty -> .)
    VERBATIM_OPEN   reduce using rule 80 (empty -> .)
    QUALIFIER       reduce using rule 80 (empty -> .)
    ID              reduce using rule 80 (empty -> .)
    SIGNED          reduce using rule 80 (empty -> .)
    $end            reduce using rule 80 (empty -> .)
    }               reduce using rule 80 (empty -> .)

    empty                          shift and go to state 4
    comments                       shift and go to state 51

state 15

    (23) definition -> function_definition .

    COMMENT_OPEN    reduce using rule 23 (definition -> function_definition .)
    }               reduce using rule 23 (definition -> function_definition .)
    [               reduce using rule 23 (definition -> function_definition .)
    DOCUMENTATION_OPEN reduce using rule 23 (definition -> function_definition .)
    TYPENAME        reduce using rule 23 (definition -> function_definition .)
    TYPEDEF         reduce using rule 23 (definition -> function_definition .)
    CLASS           reduce using rule 23 (definition -> function_definition .)
    ENUM            reduce using rule 23 (definition -> function_definition .)
    CALLBACK        reduce using rule 23 (definition -> function_definition .)
    NAMESPACE       reduce using rule 23 (definition -> function_definition .)
    VERBATIM_OPEN   reduce using rule 23 (definition -> function_definition .)
    QUALIFIER       reduce using rule 23 (definition -> function_definition .)
    ID              reduce using rule 23 (definition -> function_definition .)
    SIGNED          reduce using rule 23 (definition -> function_definition .)
    $end            reduce using rule 23 (definition -> function_definition .)


state 16

    (28) definition -> enum_definition .

    COMMENT_OPEN    reduce using rule 28 (definition -> enum_definition .)
    }               reduce using rule 28 (definition -> enum_definition .)
    [               reduce using rule 28 (definition -> enum_definition .)
    DOCUMENTATION_OPEN reduce using rule 28 (definition -> enum_definition .)
    TYPENAME        reduce using rule 28 (definition -> enum_definition .)
    TYPEDEF         reduce using rule 28 (definition -> enum_definition .)
    CLASS           reduce using rule 28 (definition -> enum_definition .)
    ENUM            reduce using rule 28 (definition -> enum_definition .)
    CALLBACK        reduce using rule 28 (definition -> enum_definition .)
    NAMESPACE       reduce using rule 28 (definition -> enum_definition .)
    VERBATIM_OPEN   reduce using rule 28 (definition -> enum_definition .)
    QUALIFIER       reduce using rule 28 (definition -> enum_definition .)
    ID              reduce using rule 28 (definition -> enum_definition .)
    SIGNED          reduce using rule 28 (definition -> enum_definition .)
    $end            reduce using rule 28 (definition -> enum_definition .)


state 17

    (7) attributes_opt -> documentation_value . [ attribute_list_opt ]
    (8) attributes_opt -> documentation_value .

    [               shift and go to state 52
    TYPENAME        reduce using rule 8 (attributes_opt -> documentation_value .)
    TYPEDEF         reduce using rule 8 (attributes_opt -> documentation_value .)
    CLASS           reduce using rule 8 (attributes_opt -> documentation_value .)
    ENUM            reduce using rule 8 (attributes_opt -> documentation_value .)
    CALLBACK        reduce using rule 8 (attributes_opt -> documentation_value .)
    NAMESPACE       reduce using rule 8 (attributes_opt -> documentation_value .)
    VERBATIM_OPEN   reduce using rule 8 (attributes_opt -> documentation_value .)
    QUALIFIER       reduce using rule 8 (attributes_opt -> documentation_value .)
    ID              reduce using rule 8 (attributes_opt -> documentation_value .)
    SIGNED          reduce using rule 8 (attributes_opt -> documentation_value .)


state 18

    (31) definition -> verbatim_block .

    COMMENT_OPEN    reduce using rule 31 (definition -> verbatim_block .)
    }               reduce using rule 31 (definition -> verbatim_block .)
    [               reduce using rule 31 (definition -> verbatim_block .)
    DOCUMENTATION_OPEN reduce using rule 31 (definition -> verbatim_block .)
    TYPENAME        reduce using rule 31 (definition -> verbatim_block .)
    TYPEDEF         reduce using rule 31 (definition -> verbatim_block .)
    CLASS           reduce using rule 31 (definition -> verbatim_block .)
    ENUM            reduce using rule 31 (definition -> verbatim_block .)
    CALLBACK        reduce using rule 31 (definition -> verbatim_block .)
    NAMESPACE       reduce using rule 31 (definition -> verbatim_block .)
    VERBATIM_OPEN   reduce using rule 31 (definition -> verbatim_block .)
    QUALIFIER       reduce using rule 31 (definition -> verbatim_block .)
    ID              reduce using rule 31 (definition -> verbatim_block .)
    SIGNED          reduce using rule 31 (definition -> verbatim_block .)
    $end            reduce using rule 31 (definition -> verbatim_block .)


state 19

    (27) definition -> class_definition .

    COMMENT_OPEN    reduce using rule 27 (definition -> class_definition .)
    }               reduce using rule 27 (definition -> class_definition .)
    [               reduce using rule 27 (definition -> class_definition .)
    DOCUMENTATION_OPEN reduce using rule 27 (definition -> class_definition .)
    TYPENAME        reduce using rule 27 (definition -> class_definition .)
    TYPEDEF         reduce using rule 27 (definition -> class_definition .)
    CLASS           reduce using rule 27 (definition -> class_definition .)
    ENUM            reduce using rule 27 (definition -> class_definition .)
    CALLBACK        reduce using rule 27 (definition -> class_definition .)
    NAMESPACE       reduce using rule 27 (definition -> class_definition .)
    VERBATIM_OPEN   reduce using rule 27 (definition -> class_definition .)
    QUALIFIER       reduce using rule 27 (definition -> class_definition .)
    ID              reduce using rule 27 (definition -> class_definition .)
    SIGNED          reduce using rule 27 (definition -> class_definition .)
    $end            reduce using rule 27 (definition -> class_definition .)


state 20

    (44) comments -> comments comment .

    COMMENT_OPEN    reduce using rule 44 (comments -> comments comment .)
    }               reduce using rule 44 (comments -> comments comment .)
    [               reduce using rule 44 (comments -> comments comment .)
    DOCUMENTATION_OPEN reduce using rule 44 (comments -> comments comment .)
    ID              reduce using rule 44 (comments -> comments comment .)
    TYPENAME        reduce using rule 44 (comments -> comments comment .)
    TYPEDEF         reduce using rule 44 (comments -> comments comment .)
    CLASS           reduce using rule 44 (comments -> comments comment .)
    ENUM            reduce using rule 44 (comments -> comments comment .)
    CALLBACK        reduce using rule 44 (comments -> comments comment .)
    VERBATIM_OPEN   reduce using rule 44 (comments -> comments comment .)
    QUALIFIER       reduce using rule 44 (comments -> comments comment .)
    SIGNED          reduce using rule 44 (comments -> comments comment .)
    NAMESPACE       reduce using rule 44 (comments -> comments comment .)
    $end            reduce using rule 44 (comments -> comments comment .)


state 21

    (45) comment -> COMMENT_OPEN . text COMMENT_CLOSE
    (47) text -> . text_list
    (48) text_list -> . empty
    (49) text_list -> . text_list TEXT
    (80) empty -> .

    TEXT            reduce using rule 80 (empty -> .)
    COMMENT_CLOSE   reduce using rule 80 (empty -> .)

    text                           shift and go to state 53
    empty                          shift and go to state 25
    text_list                      shift and go to state 24

state 22

    (19) documentation_value -> DOCUMENTATION_OPEN text . DOCUMENTATION_CLOSE

    DOCUMENTATION_CLOSE shift and go to state 54


state 23

    (20) documentation_value -> DOCUMENTATION_OPEN DOCUMENTATION_CLOSE .

    [               reduce using rule 20 (documentation_value -> DOCUMENTATION_OPEN DOCUMENTATION_CLOSE .)
    ID              reduce using rule 20 (documentation_value -> DOCUMENTATION_OPEN DOCUMENTATION_CLOSE .)
    TYPENAME        reduce using rule 20 (documentation_value -> DOCUMENTATION_OPEN DOCUMENTATION_CLOSE .)
    TYPEDEF         reduce using rule 20 (documentation_value -> DOCUMENTATION_OPEN DOCUMENTATION_CLOSE .)
    CLASS           reduce using rule 20 (documentation_value -> DOCUMENTATION_OPEN DOCUMENTATION_CLOSE .)
    ENUM            reduce using rule 20 (documentation_value -> DOCUMENTATION_OPEN DOCUMENTATION_CLOSE .)
    CALLBACK        reduce using rule 20 (documentation_value -> DOCUMENTATION_OPEN DOCUMENTATION_CLOSE .)
    VERBATIM_OPEN   reduce using rule 20 (documentation_value -> DOCUMENTATION_OPEN DOCUMENTATION_CLOSE .)
    QUALIFIER       reduce using rule 20 (documentation_value -> DOCUMENTATION_OPEN DOCUMENTATION_CLOSE .)
    SIGNED          reduce using rule 20 (documentation_value -> DOCUMENTATION_OPEN DOCUMENTATION_CLOSE .)
    NAMESPACE       reduce using rule 20 (documentation_value -> DOCUMENTATION_OPEN DOCUMENTATION_CLOSE .)


state 24

    (47) text -> text_list .
    (49) text_list -> text_list . TEXT

    COMMENT_CLOSE   reduce using rule 47 (text -> text_list .)
    STRING_CLOSE    reduce using rule 47 (text -> text_list .)
    DOCUMENTATION_CLOSE reduce using rule 47 (text -> text_list .)
    VERBATIM_CLOSE  reduce using rule 47 (text -> text_list .)
    TEXT            shift and go to state 55


state 25

    (48) text_list -> empty .

    TEXT            reduce using rule 48 (text_list -> empty .)
    COMMENT_CLOSE   reduce using rule 48 (text_list -> empty .)
    DOCUMENTATION_CLOSE reduce using rule 48 (text_list -> empty .)
    VERBATIM_CLOSE  reduce using rule 48 (text_list -> empty .)
    STRING_CLOSE    reduce using rule 48 (text_list -> empty .)


state 26

    (69) type_reference -> type_name .

    [               reduce using rule 69 (type_reference -> type_name .)
    ?               reduce using rule 69 (type_reference -> type_name .)
    ID              reduce using rule 69 (type_reference -> type_name .)
    {               reduce using rule 69 (type_reference -> type_name .)


state 27

    (51) typename_definition -> attributes_opt TYPENAME . ID ;

    ID              shift and go to state 56


state 28

    (46) verbatim_block -> attributes_opt VERBATIM_OPEN . text VERBATIM_CLOSE
    (47) text -> . text_list
    (48) text_list -> . empty
    (49) text_list -> . text_list TEXT
    (80) empty -> .

    TEXT            reduce using rule 80 (empty -> .)
    VERBATIM_CLOSE  reduce using rule 80 (empty -> .)

    text                           shift and go to state 57
    text_list                      shift and go to state 24
    empty                          shift and go to state 25

state 29

    (72) type_reference -> sized_array_type_reference .

    [               reduce using rule 72 (type_reference -> sized_array_type_reference .)
    ?               reduce using rule 72 (type_reference -> sized_array_type_reference .)
    ID              reduce using rule 72 (type_reference -> sized_array_type_reference .)
    {               reduce using rule 72 (type_reference -> sized_array_type_reference .)


state 30

    (53) function_definition -> attributes_opt type . ID ( param_list_opt ) ;
    (52) variable_definition -> attributes_opt type . ID ;

    ID              shift and go to state 58


state 31

    (2) class_definition -> attributes_opt CLASS . ID base_class { member_definition_list } ;

    ID              shift and go to state 59


state 32

    (50) typedef_definition -> attributes_opt TYPEDEF . type ID ;
    (67) type -> . type_reference
    (68) type -> . QUALIFIER type
    (69) type_reference -> . type_name
    (70) type_reference -> . scoped_type_reference
    (71) type_reference -> . unsized_array_type_reference
    (72) type_reference -> . sized_array_type_reference
    (73) type_reference -> . nullable_type_reference
    (74) type_name -> . ID
    (75) type_name -> . SIGNED ID
    (76) scoped_type_reference -> . ID : : type_reference
    (77) unsized_array_type_reference -> . type_reference [ ]
    (78) sized_array_type_reference -> . type_reference [ NUMBER ]
    (79) nullable_type_reference -> . type_reference ?

    QUALIFIER       shift and go to state 38
    ID              shift and go to state 36
    SIGNED          shift and go to state 40

    unsized_array_type_reference   shift and go to state 37
    nullable_type_reference        shift and go to state 39
    type_name                      shift and go to state 26
    scoped_type_reference          shift and go to state 33
    type_reference                 shift and go to state 41
    sized_array_type_reference     shift and go to state 29
    type                           shift and go to state 60

state 33

    (70) type_reference -> scoped_type_reference .

    [               reduce using rule 70 (type_reference -> scoped_type_reference .)
    ?               reduce using rule 70 (type_reference -> scoped_type_reference .)
    ID              reduce using rule 70 (type_reference -> scoped_type_reference .)
    {               reduce using rule 70 (type_reference -> scoped_type_reference .)


state 34

    (61) enum_definition -> attributes_opt ENUM . ID { enum_values } ;

    ID              shift and go to state 61


state 35

    (66) namespace_definition -> attributes_opt NAMESPACE . ID { definition_list }

    ID              shift and go to state 62


state 36

    (74) type_name -> ID .
    (76) scoped_type_reference -> ID . : : type_reference

    [               reduce using rule 74 (type_name -> ID .)
    ?               reduce using rule 74 (type_name -> ID .)
    ID              reduce using rule 74 (type_name -> ID .)
    {               reduce using rule 74 (type_name -> ID .)
    :               shift and go to state 63


state 37

    (71) type_reference -> unsized_array_type_reference .

    [               reduce using rule 71 (type_reference -> unsized_array_type_reference .)
    ?               reduce using rule 71 (type_reference -> unsized_array_type_reference .)
    ID              reduce using rule 71 (type_reference -> unsized_array_type_reference .)
    {               reduce using rule 71 (type_reference -> unsized_array_type_reference .)


state 38

    (68) type -> QUALIFIER . type
    (67) type -> . type_reference
    (68) type -> . QUALIFIER type
    (69) type_reference -> . type_name
    (70) type_reference -> . scoped_type_reference
    (71) type_reference -> . unsized_array_type_reference
    (72) type_reference -> . sized_array_type_reference
    (73) type_reference -> . nullable_type_reference
    (74) type_name -> . ID
    (75) type_name -> . SIGNED ID
    (76) scoped_type_reference -> . ID : : type_reference
    (77) unsized_array_type_reference -> . type_reference [ ]
    (78) sized_array_type_reference -> . type_reference [ NUMBER ]
    (79) nullable_type_reference -> . type_reference ?

    QUALIFIER       shift and go to state 38
    ID              shift and go to state 36
    SIGNED          shift and go to state 40

    unsized_array_type_reference   shift and go to state 37
    nullable_type_reference        shift and go to state 39
    type_name                      shift and go to state 26
    scoped_type_reference          shift and go to state 33
    type_reference                 shift and go to state 41
    sized_array_type_reference     shift and go to state 29
    type                           shift and go to state 64

state 39

    (73) type_reference -> nullable_type_reference .

    [               reduce using rule 73 (type_reference -> nullable_type_reference .)
    ?               reduce using rule 73 (type_reference -> nullable_type_reference .)
    ID              reduce using rule 73 (type_reference -> nullable_type_reference .)
    {               reduce using rule 73 (type_reference -> nullable_type_reference .)


state 40

    (75) type_name -> SIGNED . ID

    ID              shift and go to state 65


state 41

    (67) type -> type_reference .
    (77) unsized_array_type_reference -> type_reference . [ ]
    (78) sized_array_type_reference -> type_reference . [ NUMBER ]
    (79) nullable_type_reference -> type_reference . ?

    ID              reduce using rule 67 (type -> type_reference .)
    {               reduce using rule 67 (type -> type_reference .)
    [               shift and go to state 66
    ?               shift and go to state 67


state 42

    (54) callback_definition -> attributes_opt CALLBACK . type ID ( param_list_opt ) ;
    (67) type -> . type_reference
    (68) type -> . QUALIFIER type
    (69) type_reference -> . type_name
    (70) type_reference -> . scoped_type_reference
    (71) type_reference -> . unsized_array_type_reference
    (72) type_reference -> . sized_array_type_reference
    (73) type_reference -> . nullable_type_reference
    (74) type_name -> . ID
    (75) type_name -> . SIGNED ID
    (76) scoped_type_reference -> . ID : : type_reference
    (77) unsized_array_type_reference -> . type_reference [ ]
    (78) sized_array_type_reference -> . type_reference [ NUMBER ]
    (79) nullable_type_reference -> . type_reference ?

    QUALIFIER       shift and go to state 38
    ID              shift and go to state 36
    SIGNED          shift and go to state 40

    unsized_array_type_reference   shift and go to state 37
    nullable_type_reference        shift and go to state 39
    type_name                      shift and go to state 26
    scoped_type_reference          shift and go to state 33
    type_reference                 shift and go to state 41
    sized_array_type_reference     shift and go to state 29
    type                           shift and go to state 68

state 43

    (6) attributes_opt -> [ attribute_list_opt . ]

    ]               shift and go to state 69


state 44

    (13) attribute -> attrid . attribute_value
    (14) attribute_value -> . empty
    (15) attribute_value -> . = attrid
    (80) empty -> .

    =               shift and go to state 71
    ,               reduce using rule 80 (empty -> .)
    ]               reduce using rule 80 (empty -> .)

    attribute_value                shift and go to state 70
    empty                          shift and go to state 72

state 45

    (11) attribute_list -> attribute .

    ,               reduce using rule 11 (attribute_list -> attribute .)
    ]               reduce using rule 11 (attribute_list -> attribute .)


state 46

    (10) attribute_list_opt -> attribute_list .
    (12) attribute_list -> attribute_list . , attribute

    ]               reduce using rule 10 (attribute_list_opt -> attribute_list .)
    ,               shift and go to state 73


state 47

    (18) attrid -> STRING_OPEN . text STRING_CLOSE
    (47) text -> . text_list
    (48) text_list -> . empty
    (49) text_list -> . text_list TEXT
    (80) empty -> .

    TEXT            reduce using rule 80 (empty -> .)
    STRING_CLOSE    reduce using rule 80 (empty -> .)

    text                           shift and go to state 74
    empty                          shift and go to state 25
    text_list                      shift and go to state 24

state 48

    (16) attrid -> ID .

    ,               reduce using rule 16 (attrid -> ID .)
    ]               reduce using rule 16 (attrid -> ID .)
    =               reduce using rule 16 (attrid -> ID .)


state 49

    (9) attribute_list_opt -> empty .

    ]               reduce using rule 9 (attribute_list_opt -> empty .)


state 50

    (17) attrid -> QUALIFIER .

    ,               reduce using rule 17 (attrid -> QUALIFIER .)
    ]               reduce using rule 17 (attrid -> QUALIFIER .)
    =               reduce using rule 17 (attrid -> QUALIFIER .)


state 51

    (22) definition_list -> definition_list definition comments .
    (44) comments -> comments . comment
    (45) comment -> . COMMENT_OPEN text COMMENT_CLOSE

    }               reduce using rule 22 (definition_list -> definition_list definition comments .)
    [               reduce using rule 22 (definition_list -> definition_list definition comments .)
    DOCUMENTATION_OPEN reduce using rule 22 (definition_list -> definition_list definition comments .)
    TYPENAME        reduce using rule 22 (definition_list -> definition_list definition comments .)
    TYPEDEF         reduce using rule 22 (definition_list -> definition_list definition comments .)
    CLASS           reduce using rule 22 (definition_list -> definition_list definition comments .)
    ENUM            reduce using rule 22 (definition_list -> definition_list definition comments .)
    CALLBACK        reduce using rule 22 (definition_list -> definition_list definition comments .)
    NAMESPACE       reduce using rule 22 (definition_list -> definition_list definition comments .)
    VERBATIM_OPEN   reduce using rule 22 (definition_list -> definition_list definition comments .)
    QUALIFIER       reduce using rule 22 (definition_list -> definition_list definition comments .)
    ID              reduce using rule 22 (definition_list -> definition_list definition comments .)
    SIGNED          reduce using rule 22 (definition_list -> definition_list definition comments .)
    $end            reduce using rule 22 (definition_list -> definition_list definition comments .)
    COMMENT_OPEN    shift and go to state 21

    comment                        shift and go to state 20

state 52

    (7) attributes_opt -> documentation_value [ . attribute_list_opt ]
    (9) attribute_list_opt -> . empty
    (10) attribute_list_opt -> . attribute_list
    (80) empty -> .
    (11) attribute_list -> . attribute
    (12) attribute_list -> . attribute_list , attribute
    (13) attribute -> . attrid attribute_value
    (16) attrid -> . ID
    (17) attrid -> . QUALIFIER
    (18) attrid -> . STRING_OPEN text STRING_CLOSE

    ]               reduce using rule 80 (empty -> .)
    ID              shift and go to state 48
    QUALIFIER       shift and go to state 50
    STRING_OPEN     shift and go to state 47

    attribute_list_opt             shift and go to state 75
    attribute                      shift and go to state 45
    attribute_list                 shift and go to state 46
    attrid                         shift and go to state 44
    empty                          shift and go to state 49

state 53

    (45) comment -> COMMENT_OPEN text . COMMENT_CLOSE

    COMMENT_CLOSE   shift and go to state 76


state 54

    (19) documentation_value -> DOCUMENTATION_OPEN text DOCUMENTATION_CLOSE .

    [               reduce using rule 19 (documentation_value -> DOCUMENTATION_OPEN text DOCUMENTATION_CLOSE .)
    ID              reduce using rule 19 (documentation_value -> DOCUMENTATION_OPEN text DOCUMENTATION_CLOSE .)
    TYPENAME        reduce using rule 19 (documentation_value -> DOCUMENTATION_OPEN text DOCUMENTATION_CLOSE .)
    TYPEDEF         reduce using rule 19 (documentation_value -> DOCUMENTATION_OPEN text DOCUMENTATION_CLOSE .)
    CLASS           reduce using rule 19 (documentation_value -> DOCUMENTATION_OPEN text DOCUMENTATION_CLOSE .)
    ENUM            reduce using rule 19 (documentation_value -> DOCUMENTATION_OPEN text DOCUMENTATION_CLOSE .)
    CALLBACK        reduce using rule 19 (documentation_value -> DOCUMENTATION_OPEN text DOCUMENTATION_CLOSE .)
    VERBATIM_OPEN   reduce using rule 19 (documentation_value -> DOCUMENTATION_OPEN text DOCUMENTATION_CLOSE .)
    QUALIFIER       reduce using rule 19 (documentation_value -> DOCUMENTATION_OPEN text DOCUMENTATION_CLOSE .)
    SIGNED          reduce using rule 19 (documentation_value -> DOCUMENTATION_OPEN text DOCUMENTATION_CLOSE .)
    NAMESPACE       reduce using rule 19 (documentation_value -> DOCUMENTATION_OPEN text DOCUMENTATION_CLOSE .)


state 55

    (49) text_list -> text_list TEXT .

    TEXT            reduce using rule 49 (text_list -> text_list TEXT .)
    COMMENT_CLOSE   reduce using rule 49 (text_list -> text_list TEXT .)
    DOCUMENTATION_CLOSE reduce using rule 49 (text_list -> text_list TEXT .)
    VERBATIM_CLOSE  reduce using rule 49 (text_list -> text_list TEXT .)
    STRING_CLOSE    reduce using rule 49 (text_list -> text_list TEXT .)


state 56

    (51) typename_definition -> attributes_opt TYPENAME ID . ;

    ;               shift and go to state 77


state 57

    (46) verbatim_block -> attributes_opt VERBATIM_OPEN text . VERBATIM_CLOSE

    VERBATIM_CLOSE  shift and go to state 78


state 58

    (53) function_definition -> attributes_opt type ID . ( param_list_opt ) ;
    (52) variable_definition -> attributes_opt type ID . ;

    (               shift and go to state 79
    ;               shift and go to state 80


state 59

    (2) class_definition -> attributes_opt CLASS ID . base_class { member_definition_list } ;
    (3) base_class -> . empty
    (4) base_class -> . : type
    (80) empty -> .

    :               shift and go to state 82
    {               reduce using rule 80 (empty -> .)

    base_class                     shift and go to state 81
    empty                          shift and go to state 83

state 60

    (50) typedef_definition -> attributes_opt TYPEDEF type . ID ;

    ID              shift and go to state 84


state 61

    (61) enum_definition -> attributes_opt ENUM ID . { enum_values } ;

    {               shift and go to state 85


state 62

    (66) namespace_definition -> attributes_opt NAMESPACE ID . { definition_list }

    {               shift and go to state 86


state 63

    (76) scoped_type_reference -> ID : . : type_reference

    :               shift and go to state 87


state 64

    (68) type -> QUALIFIER type .

    ID              reduce using rule 68 (type -> QUALIFIER type .)
    {               reduce using rule 68 (type -> QUALIFIER type .)


state 65

    (75) type_name -> SIGNED ID .

    [               reduce using rule 75 (type_name -> SIGNED ID .)
    ?               reduce using rule 75 (type_name -> SIGNED ID .)
    ID              reduce using rule 75 (type_name -> SIGNED ID .)
    {               reduce using rule 75 (type_name -> SIGNED ID .)


state 66

    (77) unsized_array_type_reference -> type_reference [ . ]
    (78) sized_array_type_reference -> type_reference [ . NUMBER ]

    ]               shift and go to state 88
    NUMBER          shift and go to state 89


state 67

    (79) nullable_type_reference -> type_reference ? .

    [               reduce using rule 79 (nullable_type_reference -> type_reference ? .)
    ?               reduce using rule 79 (nullable_type_reference -> type_reference ? .)
    ID              reduce using rule 79 (nullable_type_reference -> type_reference ? .)
    {               reduce using rule 79 (nullable_type_reference -> type_reference ? .)


state 68

    (54) callback_definition -> attributes_opt CALLBACK type . ID ( param_list_opt ) ;

    ID              shift and go to state 90


state 69

    (6) attributes_opt -> [ attribute_list_opt ] .

    TYPENAME        reduce using rule 6 (attributes_opt -> [ attribute_list_opt ] .)
    TYPEDEF         reduce using rule 6 (attributes_opt -> [ attribute_list_opt ] .)
    CLASS           reduce using rule 6 (attributes_opt -> [ attribute_list_opt ] .)
    ENUM            reduce using rule 6 (attributes_opt -> [ attribute_list_opt ] .)
    CALLBACK        reduce using rule 6 (attributes_opt -> [ attribute_list_opt ] .)
    NAMESPACE       reduce using rule 6 (attributes_opt -> [ attribute_list_opt ] .)
    VERBATIM_OPEN   reduce using rule 6 (attributes_opt -> [ attribute_list_opt ] .)
    QUALIFIER       reduce using rule 6 (attributes_opt -> [ attribute_list_opt ] .)
    ID              reduce using rule 6 (attributes_opt -> [ attribute_list_opt ] .)
    SIGNED          reduce using rule 6 (attributes_opt -> [ attribute_list_opt ] .)


state 70

    (13) attribute -> attrid attribute_value .

    ,               reduce using rule 13 (attribute -> attrid attribute_value .)
    ]               reduce using rule 13 (attribute -> attrid attribute_value .)


state 71

    (15) attribute_value -> = . attrid
    (16) attrid -> . ID
    (17) attrid -> . QUALIFIER
    (18) attrid -> . STRING_OPEN text STRING_CLOSE

    ID              shift and go to state 48
    QUALIFIER       shift and go to state 50
    STRING_OPEN     shift and go to state 47

    attrid                         shift and go to state 91

state 72

    (14) attribute_value -> empty .

    ,               reduce using rule 14 (attribute_value -> empty .)
    ]               reduce using rule 14 (attribute_value -> empty .)


state 73

    (12) attribute_list -> attribute_list , . attribute
    (13) attribute -> . attrid attribute_value
    (16) attrid -> . ID
    (17) attrid -> . QUALIFIER
    (18) attrid -> . STRING_OPEN text STRING_CLOSE

    ID              shift and go to state 48
    QUALIFIER       shift and go to state 50
    STRING_OPEN     shift and go to state 47

    attribute                      shift and go to state 92
    attrid                         shift and go to state 44

state 74

    (18) attrid -> STRING_OPEN text . STRING_CLOSE

    STRING_CLOSE    shift and go to state 93


state 75

    (7) attributes_opt -> documentation_value [ attribute_list_opt . ]

    ]               shift and go to state 94


state 76

    (45) comment -> COMMENT_OPEN text COMMENT_CLOSE .

    COMMENT_OPEN    reduce using rule 45 (comment -> COMMENT_OPEN text COMMENT_CLOSE .)
    }               reduce using rule 45 (comment -> COMMENT_OPEN text COMMENT_CLOSE .)
    [               reduce using rule 45 (comment -> COMMENT_OPEN text COMMENT_CLOSE .)
    DOCUMENTATION_OPEN reduce using rule 45 (comment -> COMMENT_OPEN text COMMENT_CLOSE .)
    ID              reduce using rule 45 (comment -> COMMENT_OPEN text COMMENT_CLOSE .)
    TYPENAME        reduce using rule 45 (comment -> COMMENT_OPEN text COMMENT_CLOSE .)
    TYPEDEF         reduce using rule 45 (comment -> COMMENT_OPEN text COMMENT_CLOSE .)
    CLASS           reduce using rule 45 (comment -> COMMENT_OPEN text COMMENT_CLOSE .)
    ENUM            reduce using rule 45 (comment -> COMMENT_OPEN text COMMENT_CLOSE .)
    CALLBACK        reduce using rule 45 (comment -> COMMENT_OPEN text COMMENT_CLOSE .)
    VERBATIM_OPEN   reduce using rule 45 (comment -> COMMENT_OPEN text COMMENT_CLOSE .)
    QUALIFIER       reduce using rule 45 (comment -> COMMENT_OPEN text COMMENT_CLOSE .)
    SIGNED          reduce using rule 45 (comment -> COMMENT_OPEN text COMMENT_CLOSE .)
    NAMESPACE       reduce using rule 45 (comment -> COMMENT_OPEN text COMMENT_CLOSE .)
    $end            reduce using rule 45 (comment -> COMMENT_OPEN text COMMENT_CLOSE .)


state 77

    (51) typename_definition -> attributes_opt TYPENAME ID ; .

    COMMENT_OPEN    reduce using rule 51 (typename_definition -> attributes_opt TYPENAME ID ; .)
    [               reduce using rule 51 (typename_definition -> attributes_opt TYPENAME ID ; .)
    DOCUMENTATION_OPEN reduce using rule 51 (typename_definition -> attributes_opt TYPENAME ID ; .)
    TYPENAME        reduce using rule 51 (typename_definition -> attributes_opt TYPENAME ID ; .)
    TYPEDEF         reduce using rule 51 (typename_definition -> attributes_opt TYPENAME ID ; .)
    CLASS           reduce using rule 51 (typename_definition -> attributes_opt TYPENAME ID ; .)
    ENUM            reduce using rule 51 (typename_definition -> attributes_opt TYPENAME ID ; .)
    CALLBACK        reduce using rule 51 (typename_definition -> attributes_opt TYPENAME ID ; .)
    NAMESPACE       reduce using rule 51 (typename_definition -> attributes_opt TYPENAME ID ; .)
    VERBATIM_OPEN   reduce using rule 51 (typename_definition -> attributes_opt TYPENAME ID ; .)
    QUALIFIER       reduce using rule 51 (typename_definition -> attributes_opt TYPENAME ID ; .)
    ID              reduce using rule 51 (typename_definition -> attributes_opt TYPENAME ID ; .)
    SIGNED          reduce using rule 51 (typename_definition -> attributes_opt TYPENAME ID ; .)
    $end            reduce using rule 51 (typename_definition -> attributes_opt TYPENAME ID ; .)
    }               reduce using rule 51 (typename_definition -> attributes_opt TYPENAME ID ; .)


state 78

    (46) verbatim_block -> attributes_opt VERBATIM_OPEN text VERBATIM_CLOSE .

    COMMENT_OPEN    reduce using rule 46 (verbatim_block -> attributes_opt VERBATIM_OPEN text VERBATIM_CLOSE .)
    [               reduce using rule 46 (verbatim_block -> attributes_opt VERBATIM_OPEN text VERBATIM_CLOSE .)
    DOCUMENTATION_OPEN reduce using rule 46 (verbatim_block -> attributes_opt VERBATIM_OPEN text VERBATIM_CLOSE .)
    TYPENAME        reduce using rule 46 (verbatim_block -> attributes_opt VERBATIM_OPEN text VERBATIM_CLOSE .)
    TYPEDEF         reduce using rule 46 (verbatim_block -> attributes_opt VERBATIM_OPEN text VERBATIM_CLOSE .)
    CLASS           reduce using rule 46 (verbatim_block -> attributes_opt VERBATIM_OPEN text VERBATIM_CLOSE .)
    ENUM            reduce using rule 46 (verbatim_block -> attributes_opt VERBATIM_OPEN text VERBATIM_CLOSE .)
    CALLBACK        reduce using rule 46 (verbatim_block -> attributes_opt VERBATIM_OPEN text VERBATIM_CLOSE .)
    NAMESPACE       reduce using rule 46 (verbatim_block -> attributes_opt VERBATIM_OPEN text VERBATIM_CLOSE .)
    VERBATIM_OPEN   reduce using rule 46 (verbatim_block -> attributes_opt VERBATIM_OPEN text VERBATIM_CLOSE .)
    QUALIFIER       reduce using rule 46 (verbatim_block -> attributes_opt VERBATIM_OPEN text VERBATIM_CLOSE .)
    ID              reduce using rule 46 (verbatim_block -> attributes_opt VERBATIM_OPEN text VERBATIM_CLOSE .)
    SIGNED          reduce using rule 46 (verbatim_block -> attributes_opt VERBATIM_OPEN text VERBATIM_CLOSE .)
    $end            reduce using rule 46 (verbatim_block -> attributes_opt VERBATIM_OPEN text VERBATIM_CLOSE .)
    }               reduce using rule 46 (verbatim_block -> attributes_opt VERBATIM_OPEN text VERBATIM_CLOSE .)


state 79

    (53) function_definition -> attributes_opt type ID ( . param_list_opt ) ;
    (56) param_list_opt -> . empty
    (57) param_list_opt -> . param_list
    (80) empty -> .
    (58) param_list -> . param
    (59) param_list -> . param_list , param
    (60) param -> . type ID
    (67) type -> . type_reference
    (68) type -> . QUALIFIER type
    (69) type_reference -> . type_name
    (70) type_reference -> . scoped_type_reference
    (71) type_reference -> . unsized_array_type_reference
    (72) type_reference -> . sized_array_type_reference
    (73) type_reference -> . nullable_type_reference
    (74) type_name -> . ID
    (75) type_name -> . SIGNED ID
    (76) scoped_type_reference -> . ID : : type_reference
    (77) unsized_array_type_reference -> . type_reference [ ]
    (78) sized_array_type_reference -> . type_reference [ NUMBER ]
    (79) nullable_type_reference -> . type_reference ?

    )               reduce using rule 80 (empty -> .)
    QUALIFIER       shift and go to state 38
    ID              shift and go to state 36
    SIGNED          shift and go to state 40

    unsized_array_type_reference   shift and go to state 37
    nullable_type_reference        shift and go to state 39
    param_list                     shift and go to state 95
    type_name                      shift and go to state 26
    scoped_type_reference          shift and go to state 33
    param                          shift and go to state 96
    type_reference                 shift and go to state 41
    param_list_opt                 shift and go to state 97
    sized_array_type_reference     shift and go to state 29
    type                           shift and go to state 98
    empty                          shift and go to state 99

state 80

    (52) variable_definition -> attributes_opt type ID ; .

    COMMENT_OPEN    reduce using rule 52 (variable_definition -> attributes_opt type ID ; .)
    }               reduce using rule 52 (variable_definition -> attributes_opt type ID ; .)
    [               reduce using rule 52 (variable_definition -> attributes_opt type ID ; .)
    DOCUMENTATION_OPEN reduce using rule 52 (variable_definition -> attributes_opt type ID ; .)
    ID              reduce using rule 52 (variable_definition -> attributes_opt type ID ; .)
    TYPENAME        reduce using rule 52 (variable_definition -> attributes_opt type ID ; .)
    TYPEDEF         reduce using rule 52 (variable_definition -> attributes_opt type ID ; .)
    CLASS           reduce using rule 52 (variable_definition -> attributes_opt type ID ; .)
    ENUM            reduce using rule 52 (variable_definition -> attributes_opt type ID ; .)
    CALLBACK        reduce using rule 52 (variable_definition -> attributes_opt type ID ; .)
    VERBATIM_OPEN   reduce using rule 52 (variable_definition -> attributes_opt type ID ; .)
    QUALIFIER       reduce using rule 52 (variable_definition -> attributes_opt type ID ; .)
    SIGNED          reduce using rule 52 (variable_definition -> attributes_opt type ID ; .)
    NAMESPACE       reduce using rule 52 (variable_definition -> attributes_opt type ID ; .)
    $end            reduce using rule 52 (variable_definition -> attributes_opt type ID ; .)


state 81

    (2) class_definition -> attributes_opt CLASS ID base_class . { member_definition_list } ;

    {               shift and go to state 100


state 82

    (4) base_class -> : . type
    (67) type -> . type_reference
    (68) type -> . QUALIFIER type
    (69) type_reference -> . type_name
    (70) type_reference -> . scoped_type_reference
    (71) type_reference -> . unsized_array_type_reference
    (72) type_reference -> . sized_array_type_reference
    (73) type_reference -> . nullable_type_reference
    (74) type_name -> . ID
    (75) type_name -> . SIGNED ID
    (76) scoped_type_reference -> . ID : : type_reference
    (77) unsized_array_type_reference -> . type_reference [ ]
    (78) sized_array_type_reference -> . type_reference [ NUMBER ]
    (79) nullable_type_reference -> . type_reference ?

    QUALIFIER       shift and go to state 38
    ID              shift and go to state 36
    SIGNED          shift and go to state 40

    unsized_array_type_reference   shift and go to state 37
    nullable_type_reference        shift and go to state 39
    type_name                      shift and go to state 26
    scoped_type_reference          shift and go to state 33
    type_reference                 shift and go to state 41
    sized_array_type_reference     shift and go to state 29
    type                           shift and go to state 101

state 83

    (3) base_class -> empty .

    {               reduce using rule 3 (base_class -> empty .)


state 84

    (50) typedef_definition -> attributes_opt TYPEDEF type ID . ;

    ;               shift and go to state 102


state 85

    (61) enum_definition -> attributes_opt ENUM ID { . enum_values } ;
    (62) enum_values -> . enum_value
    (63) enum_values -> . enum_values , enum_value
    (64) enum_value -> . ID
    (65) enum_value -> . ID = NUMBER

    ID              shift and go to state 104

    enum_value                     shift and go to state 103
    enum_values                    shift and go to state 105

state 86

    (66) namespace_definition -> attributes_opt NAMESPACE ID { . definition_list }
    (21) definition_list -> . comments
    (22) definition_list -> . definition_list definition comments
    (43) comments -> . empty
    (44) comments -> . comments comment
    (80) empty -> .

    COMMENT_OPEN    reduce using rule 80 (empty -> .)
    }               reduce using rule 80 (empty -> .)
    [               reduce using rule 80 (empty -> .)
    DOCUMENTATION_OPEN reduce using rule 80 (empty -> .)
    TYPENAME        reduce using rule 80 (empty -> .)
    TYPEDEF         reduce using rule 80 (empty -> .)
    CLASS           reduce using rule 80 (empty -> .)
    ENUM            reduce using rule 80 (empty -> .)
    CALLBACK        reduce using rule 80 (empty -> .)
    NAMESPACE       reduce using rule 80 (empty -> .)
    VERBATIM_OPEN   reduce using rule 80 (empty -> .)
    QUALIFIER       reduce using rule 80 (empty -> .)
    ID              reduce using rule 80 (empty -> .)
    SIGNED          reduce using rule 80 (empty -> .)

    definition_list                shift and go to state 106
    comments                       shift and go to state 2
    empty                          shift and go to state 4

state 87

    (76) scoped_type_reference -> ID : : . type_reference
    (69) type_reference -> . type_name
    (70) type_reference -> . scoped_type_reference
    (71) type_reference -> . unsized_array_type_reference
    (72) type_reference -> . sized_array_type_reference
    (73) type_reference -> . nullable_type_reference
    (74) type_name -> . ID
    (75) type_name -> . SIGNED ID
    (76) scoped_type_reference -> . ID : : type_reference
    (77) unsized_array_type_reference -> . type_reference [ ]
    (78) sized_array_type_reference -> . type_reference [ NUMBER ]
    (79) nullable_type_reference -> . type_reference ?

    ID              shift and go to state 36
    SIGNED          shift and go to state 40

    unsized_array_type_reference   shift and go to state 37
    nullable_type_reference        shift and go to state 39
    type_name                      shift and go to state 26
    scoped_type_reference          shift and go to state 33
    type_reference                 shift and go to state 107
    sized_array_type_reference     shift and go to state 29

state 88

    (77) unsized_array_type_reference -> type_reference [ ] .

    [               reduce using rule 77 (unsized_array_type_reference -> type_reference [ ] .)
    ?               reduce using rule 77 (unsized_array_type_reference -> type_reference [ ] .)
    ID              reduce using rule 77 (unsized_array_type_reference -> type_reference [ ] .)
    {               reduce using rule 77 (unsized_array_type_reference -> type_reference [ ] .)


state 89

    (78) sized_array_type_reference -> type_reference [ NUMBER . ]

    ]               shift and go to state 108


state 90

    (54) callback_definition -> attributes_opt CALLBACK type ID . ( param_list_opt ) ;

    (               shift and go to state 109


state 91

    (15) attribute_value -> = attrid .

    ,               reduce using rule 15 (attribute_value -> = attrid .)
    ]               reduce using rule 15 (attribute_value -> = attrid .)


state 92

    (12) attribute_list -> attribute_list , attribute .

    ,               reduce using rule 12 (attribute_list -> attribute_list , attribute .)
    ]               reduce using rule 12 (attribute_list -> attribute_list , attribute .)


state 93

    (18) attrid -> STRING_OPEN text STRING_CLOSE .

    ,               reduce using rule 18 (attrid -> STRING_OPEN text STRING_CLOSE .)
    ]               reduce using rule 18 (attrid -> STRING_OPEN text STRING_CLOSE .)
    =               reduce using rule 18 (attrid -> STRING_OPEN text STRING_CLOSE .)


state 94

    (7) attributes_opt -> documentation_value [ attribute_list_opt ] .

    TYPENAME        reduce using rule 7 (attributes_opt -> documentation_value [ attribute_list_opt ] .)
    TYPEDEF         reduce using rule 7 (attributes_opt -> documentation_value [ attribute_list_opt ] .)
    CLASS           reduce using rule 7 (attributes_opt -> documentation_value [ attribute_list_opt ] .)
    ENUM            reduce using rule 7 (attributes_opt -> documentation_value [ attribute_list_opt ] .)
    CALLBACK        reduce using rule 7 (attributes_opt -> documentation_value [ attribute_list_opt ] .)
    NAMESPACE       reduce using rule 7 (attributes_opt -> documentation_value [ attribute_list_opt ] .)
    VERBATIM_OPEN   reduce using rule 7 (attributes_opt -> documentation_value [ attribute_list_opt ] .)
    QUALIFIER       reduce using rule 7 (attributes_opt -> documentation_value [ attribute_list_opt ] .)
    ID              reduce using rule 7 (attributes_opt -> documentation_value [ attribute_list_opt ] .)
    SIGNED          reduce using rule 7 (attributes_opt -> documentation_value [ attribute_list_opt ] .)


state 95

    (57) param_list_opt -> param_list .
    (59) param_list -> param_list . , param

    )               reduce using rule 57 (param_list_opt -> param_list .)
    ,               shift and go to state 110


state 96

    (58) param_list -> param .

    ,               reduce using rule 58 (param_list -> param .)
    )               reduce using rule 58 (param_list -> param .)


state 97

    (53) function_definition -> attributes_opt type ID ( param_list_opt . ) ;

    )               shift and go to state 111


state 98

    (60) param -> type . ID

    ID              shift and go to state 112


state 99

    (56) param_list_opt -> empty .

    )               reduce using rule 56 (param_list_opt -> empty .)


state 100

    (2) class_definition -> attributes_opt CLASS ID base_class { . member_definition_list } ;
    (32) member_definition_list -> . comments
    (33) member_definition_list -> . member_definition_list member_definition comments
    (43) comments -> . empty
    (44) comments -> . comments comment
    (80) empty -> .

    COMMENT_OPEN    reduce using rule 80 (empty -> .)
    }               reduce using rule 80 (empty -> .)
    [               reduce using rule 80 (empty -> .)
    DOCUMENTATION_OPEN reduce using rule 80 (empty -> .)
    ID              reduce using rule 80 (empty -> .)
    TYPENAME        reduce using rule 80 (empty -> .)
    TYPEDEF         reduce using rule 80 (empty -> .)
    CLASS           reduce using rule 80 (empty -> .)
    ENUM            reduce using rule 80 (empty -> .)
    CALLBACK        reduce using rule 80 (empty -> .)
    VERBATIM_OPEN   reduce using rule 80 (empty -> .)
    QUALIFIER       reduce using rule 80 (empty -> .)
    SIGNED          reduce using rule 80 (empty -> .)

    member_definition_list         shift and go to state 113
    comments                       shift and go to state 114
    empty                          shift and go to state 4

state 101

    (4) base_class -> : type .

    {               reduce using rule 4 (base_class -> : type .)


state 102

    (50) typedef_definition -> attributes_opt TYPEDEF type ID ; .

    COMMENT_OPEN    reduce using rule 50 (typedef_definition -> attributes_opt TYPEDEF type ID ; .)
    [               reduce using rule 50 (typedef_definition -> attributes_opt TYPEDEF type ID ; .)
    DOCUMENTATION_OPEN reduce using rule 50 (typedef_definition -> attributes_opt TYPEDEF type ID ; .)
    TYPENAME        reduce using rule 50 (typedef_definition -> attributes_opt TYPEDEF type ID ; .)
    TYPEDEF         reduce using rule 50 (typedef_definition -> attributes_opt TYPEDEF type ID ; .)
    CLASS           reduce using rule 50 (typedef_definition -> attributes_opt TYPEDEF type ID ; .)
    ENUM            reduce using rule 50 (typedef_definition -> attributes_opt TYPEDEF type ID ; .)
    CALLBACK        reduce using rule 50 (typedef_definition -> attributes_opt TYPEDEF type ID ; .)
    NAMESPACE       reduce using rule 50 (typedef_definition -> attributes_opt TYPEDEF type ID ; .)
    VERBATIM_OPEN   reduce using rule 50 (typedef_definition -> attributes_opt TYPEDEF type ID ; .)
    QUALIFIER       reduce using rule 50 (typedef_definition -> attributes_opt TYPEDEF type ID ; .)
    ID              reduce using rule 50 (typedef_definition -> attributes_opt TYPEDEF type ID ; .)
    SIGNED          reduce using rule 50 (typedef_definition -> attributes_opt TYPEDEF type ID ; .)
    $end            reduce using rule 50 (typedef_definition -> attributes_opt TYPEDEF type ID ; .)
    }               reduce using rule 50 (typedef_definition -> attributes_opt TYPEDEF type ID ; .)


state 103

    (62) enum_values -> enum_value .

    }               reduce using rule 62 (enum_values -> enum_value .)
    ,               reduce using rule 62 (enum_values -> enum_value .)


state 104

    (64) enum_value -> ID .
    (65) enum_value -> ID . = NUMBER

    }               reduce using rule 64 (enum_value -> ID .)
    ,               reduce using rule 64 (enum_value -> ID .)
    =               shift and go to state 115


state 105

    (61) enum_definition -> attributes_opt ENUM ID { enum_values . } ;
    (63) enum_values -> enum_values . , enum_value

    }               shift and go to state 117
    ,               shift and go to state 116


state 106

    (66) namespace_definition -> attributes_opt NAMESPACE ID { definition_list . }
    (22) definition_list -> definition_list . definition comments
    (23) definition -> . function_definition
    (24) definition -> . variable_definition
    (25) definition -> . typename_definition
    (26) definition -> . typedef_definition
    (27) definition -> . class_definition
    (28) definition -> . enum_definition
    (29) definition -> . callback_definition
    (30) definition -> . namespace_definition
    (31) definition -> . verbatim_block
    (53) function_definition -> . attributes_opt type ID ( param_list_opt ) ;
    (52) variable_definition -> . attributes_opt type ID ;
    (51) typename_definition -> . attributes_opt TYPENAME ID ;
    (50) typedef_definition -> . attributes_opt TYPEDEF type ID ;
    (2) class_definition -> . attributes_opt CLASS ID base_class { member_definition_list } ;
    (61) enum_definition -> . attributes_opt ENUM ID { enum_values } ;
    (54) callback_definition -> . attributes_opt CALLBACK type ID ( param_list_opt ) ;
    (66) namespace_definition -> . attributes_opt NAMESPACE ID { definition_list }
    (46) verbatim_block -> . attributes_opt VERBATIM_OPEN text VERBATIM_CLOSE
    (5) attributes_opt -> . empty
    (6) attributes_opt -> . [ attribute_list_opt ]
    (7) attributes_opt -> . documentation_value [ attribute_list_opt ]
    (8) attributes_opt -> . documentation_value
    (80) empty -> .
    (19) documentation_value -> . DOCUMENTATION_OPEN text DOCUMENTATION_CLOSE
    (20) documentation_value -> . DOCUMENTATION_OPEN DOCUMENTATION_CLOSE

    }               shift and go to state 118
    [               shift and go to state 13
    TYPENAME        reduce using rule 80 (empty -> .)
    TYPEDEF         reduce using rule 80 (empty -> .)
    CLASS           reduce using rule 80 (empty -> .)
    ENUM            reduce using rule 80 (empty -> .)
    CALLBACK        reduce using rule 80 (empty -> .)
    NAMESPACE       reduce using rule 80 (empty -> .)
    VERBATIM_OPEN   reduce using rule 80 (empty -> .)
    QUALIFIER       reduce using rule 80 (empty -> .)
    ID              reduce using rule 80 (empty -> .)
    SIGNED          reduce using rule 80 (empty -> .)
    DOCUMENTATION_OPEN shift and go to state 5

    typename_definition            shift and go to state 6
    variable_definition            shift and go to state 7
    callback_definition            shift and go to state 8
    namespace_definition           shift and go to state 11
    documentation_value            shift and go to state 17
    typedef_definition             shift and go to state 10
    attributes_opt                 shift and go to state 9
    empty                          shift and go to state 12
    definition                     shift and go to state 14
    function_definition            shift and go to state 15
    enum_definition                shift and go to state 16
    verbatim_block                 shift and go to state 18
    class_definition               shift and go to state 19

state 107

    (76) scoped_type_reference -> ID : : type_reference .
    (77) unsized_array_type_reference -> type_reference . [ ]
    (78) sized_array_type_reference -> type_reference . [ NUMBER ]
    (79) nullable_type_reference -> type_reference . ?

  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for ? resolved as shift
    ID              reduce using rule 76 (scoped_type_reference -> ID : : type_reference .)
    {               reduce using rule 76 (scoped_type_reference -> ID : : type_reference .)
    [               shift and go to state 66
    ?               shift and go to state 67

  ! [               [ reduce using rule 76 (scoped_type_reference -> ID : : type_reference .) ]
  ! ?               [ reduce using rule 76 (scoped_type_reference -> ID : : type_reference .) ]


state 108

    (78) sized_array_type_reference -> type_reference [ NUMBER ] .

    [               reduce using rule 78 (sized_array_type_reference -> type_reference [ NUMBER ] .)
    ?               reduce using rule 78 (sized_array_type_reference -> type_reference [ NUMBER ] .)
    ID              reduce using rule 78 (sized_array_type_reference -> type_reference [ NUMBER ] .)
    {               reduce using rule 78 (sized_array_type_reference -> type_reference [ NUMBER ] .)


state 109

    (54) callback_definition -> attributes_opt CALLBACK type ID ( . param_list_opt ) ;
    (56) param_list_opt -> . empty
    (57) param_list_opt -> . param_list
    (80) empty -> .
    (58) param_list -> . param
    (59) param_list -> . param_list , param
    (60) param -> . type ID
    (67) type -> . type_reference
    (68) type -> . QUALIFIER type
    (69) type_reference -> . type_name
    (70) type_reference -> . scoped_type_reference
    (71) type_reference -> . unsized_array_type_reference
    (72) type_reference -> . sized_array_type_reference
    (73) type_reference -> . nullable_type_reference
    (74) type_name -> . ID
    (75) type_name -> . SIGNED ID
    (76) scoped_type_reference -> . ID : : type_reference
    (77) unsized_array_type_reference -> . type_reference [ ]
    (78) sized_array_type_reference -> . type_reference [ NUMBER ]
    (79) nullable_type_reference -> . type_reference ?

    )               reduce using rule 80 (empty -> .)
    QUALIFIER       shift and go to state 38
    ID              shift and go to state 36
    SIGNED          shift and go to state 40

    unsized_array_type_reference   shift and go to state 37
    nullable_type_reference        shift and go to state 39
    param_list                     shift and go to state 95
    type_name                      shift and go to state 26
    scoped_type_reference          shift and go to state 33
    param                          shift and go to state 96
    type_reference                 shift and go to state 41
    param_list_opt                 shift and go to state 119
    sized_array_type_reference     shift and go to state 29
    type                           shift and go to state 98
    empty                          shift and go to state 99

state 110

    (59) param_list -> param_list , . param
    (60) param -> . type ID
    (67) type -> . type_reference
    (68) type -> . QUALIFIER type
    (69) type_reference -> . type_name
    (70) type_reference -> . scoped_type_reference
    (71) type_reference -> . unsized_array_type_reference
    (72) type_reference -> . sized_array_type_reference
    (73) type_reference -> . nullable_type_reference
    (74) type_name -> . ID
    (75) type_name -> . SIGNED ID
    (76) scoped_type_reference -> . ID : : type_reference
    (77) unsized_array_type_reference -> . type_reference [ ]
    (78) sized_array_type_reference -> . type_reference [ NUMBER ]
    (79) nullable_type_reference -> . type_reference ?

    QUALIFIER       shift and go to state 38
    ID              shift and go to state 36
    SIGNED          shift and go to state 40

    unsized_array_type_reference   shift and go to state 37
    nullable_type_reference        shift and go to state 39
    type_name                      shift and go to state 26
    scoped_type_reference          shift and go to state 33
    param                          shift and go to state 120
    type_reference                 shift and go to state 41
    sized_array_type_reference     shift and go to state 29
    type                           shift and go to state 98

state 111

    (53) function_definition -> attributes_opt type ID ( param_list_opt ) . ;

    ;               shift and go to state 121


state 112

    (60) param -> type ID .

    ,               reduce using rule 60 (param -> type ID .)
    )               reduce using rule 60 (param -> type ID .)


state 113

    (2) class_definition -> attributes_opt CLASS ID base_class { member_definition_list . } ;
    (33) member_definition_list -> member_definition_list . member_definition comments
    (34) member_definition -> . function_definition
    (35) member_definition -> . constructor_definition
    (36) member_definition -> . variable_definition
    (37) member_definition -> . typename_definition
    (38) member_definition -> . typedef_definition
    (39) member_definition -> . class_definition
    (40) member_definition -> . enum_definition
    (41) member_definition -> . callback_definition
    (42) member_definition -> . verbatim_block
    (53) function_definition -> . attributes_opt type ID ( param_list_opt ) ;
    (55) constructor_definition -> . attributes_opt ID ( param_list_opt ) ;
    (52) variable_definition -> . attributes_opt type ID ;
    (51) typename_definition -> . attributes_opt TYPENAME ID ;
    (50) typedef_definition -> . attributes_opt TYPEDEF type ID ;
    (2) class_definition -> . attributes_opt CLASS ID base_class { member_definition_list } ;
    (61) enum_definition -> . attributes_opt ENUM ID { enum_values } ;
    (54) callback_definition -> . attributes_opt CALLBACK type ID ( param_list_opt ) ;
    (46) verbatim_block -> . attributes_opt VERBATIM_OPEN text VERBATIM_CLOSE
    (5) attributes_opt -> . empty
    (6) attributes_opt -> . [ attribute_list_opt ]
    (7) attributes_opt -> . documentation_value [ attribute_list_opt ]
    (8) attributes_opt -> . documentation_value
    (80) empty -> .
    (19) documentation_value -> . DOCUMENTATION_OPEN text DOCUMENTATION_CLOSE
    (20) documentation_value -> . DOCUMENTATION_OPEN DOCUMENTATION_CLOSE

    }               shift and go to state 133
    [               shift and go to state 13
    ID              reduce using rule 80 (empty -> .)
    TYPENAME        reduce using rule 80 (empty -> .)
    TYPEDEF         reduce using rule 80 (empty -> .)
    CLASS           reduce using rule 80 (empty -> .)
    ENUM            reduce using rule 80 (empty -> .)
    CALLBACK        reduce using rule 80 (empty -> .)
    VERBATIM_OPEN   reduce using rule 80 (empty -> .)
    QUALIFIER       reduce using rule 80 (empty -> .)
    SIGNED          reduce using rule 80 (empty -> .)
    DOCUMENTATION_OPEN shift and go to state 5

    function_definition            shift and go to state 128
    typename_definition            shift and go to state 122
    documentation_value            shift and go to state 17
    variable_definition            shift and go to state 123
    typedef_definition             shift and go to state 125
    enum_definition                shift and go to state 129
    attributes_opt                 shift and go to state 126
    class_definition               shift and go to state 131
    verbatim_block                 shift and go to state 130
    callback_definition            shift and go to state 124
    constructor_definition         shift and go to state 132
    empty                          shift and go to state 12
    member_definition              shift and go to state 127

state 114

    (32) member_definition_list -> comments .
    (44) comments -> comments . comment
    (45) comment -> . COMMENT_OPEN text COMMENT_CLOSE

    }               reduce using rule 32 (member_definition_list -> comments .)
    [               reduce using rule 32 (member_definition_list -> comments .)
    DOCUMENTATION_OPEN reduce using rule 32 (member_definition_list -> comments .)
    ID              reduce using rule 32 (member_definition_list -> comments .)
    TYPENAME        reduce using rule 32 (member_definition_list -> comments .)
    TYPEDEF         reduce using rule 32 (member_definition_list -> comments .)
    CLASS           reduce using rule 32 (member_definition_list -> comments .)
    ENUM            reduce using rule 32 (member_definition_list -> comments .)
    CALLBACK        reduce using rule 32 (member_definition_list -> comments .)
    VERBATIM_OPEN   reduce using rule 32 (member_definition_list -> comments .)
    QUALIFIER       reduce using rule 32 (member_definition_list -> comments .)
    SIGNED          reduce using rule 32 (member_definition_list -> comments .)
    COMMENT_OPEN    shift and go to state 21

    comment                        shift and go to state 20

state 115

    (65) enum_value -> ID = . NUMBER

    NUMBER          shift and go to state 134


state 116

    (63) enum_values -> enum_values , . enum_value
    (64) enum_value -> . ID
    (65) enum_value -> . ID = NUMBER

    ID              shift and go to state 104

    enum_value                     shift and go to state 135

state 117

    (61) enum_definition -> attributes_opt ENUM ID { enum_values } . ;

    ;               shift and go to state 136


state 118

    (66) namespace_definition -> attributes_opt NAMESPACE ID { definition_list } .

    COMMENT_OPEN    reduce using rule 66 (namespace_definition -> attributes_opt NAMESPACE ID { definition_list } .)
    }               reduce using rule 66 (namespace_definition -> attributes_opt NAMESPACE ID { definition_list } .)
    [               reduce using rule 66 (namespace_definition -> attributes_opt NAMESPACE ID { definition_list } .)
    DOCUMENTATION_OPEN reduce using rule 66 (namespace_definition -> attributes_opt NAMESPACE ID { definition_list } .)
    TYPENAME        reduce using rule 66 (namespace_definition -> attributes_opt NAMESPACE ID { definition_list } .)
    TYPEDEF         reduce using rule 66 (namespace_definition -> attributes_opt NAMESPACE ID { definition_list } .)
    CLASS           reduce using rule 66 (namespace_definition -> attributes_opt NAMESPACE ID { definition_list } .)
    ENUM            reduce using rule 66 (namespace_definition -> attributes_opt NAMESPACE ID { definition_list } .)
    CALLBACK        reduce using rule 66 (namespace_definition -> attributes_opt NAMESPACE ID { definition_list } .)
    NAMESPACE       reduce using rule 66 (namespace_definition -> attributes_opt NAMESPACE ID { definition_list } .)
    VERBATIM_OPEN   reduce using rule 66 (namespace_definition -> attributes_opt NAMESPACE ID { definition_list } .)
    QUALIFIER       reduce using rule 66 (namespace_definition -> attributes_opt NAMESPACE ID { definition_list } .)
    ID              reduce using rule 66 (namespace_definition -> attributes_opt NAMESPACE ID { definition_list } .)
    SIGNED          reduce using rule 66 (namespace_definition -> attributes_opt NAMESPACE ID { definition_list } .)
    $end            reduce using rule 66 (namespace_definition -> attributes_opt NAMESPACE ID { definition_list } .)


state 119

    (54) callback_definition -> attributes_opt CALLBACK type ID ( param_list_opt . ) ;

    )               shift and go to state 137


state 120

    (59) param_list -> param_list , param .

    ,               reduce using rule 59 (param_list -> param_list , param .)
    )               reduce using rule 59 (param_list -> param_list , param .)


state 121

    (53) function_definition -> attributes_opt type ID ( param_list_opt ) ; .

    COMMENT_OPEN    reduce using rule 53 (function_definition -> attributes_opt type ID ( param_list_opt ) ; .)
    }               reduce using rule 53 (function_definition -> attributes_opt type ID ( param_list_opt ) ; .)
    [               reduce using rule 53 (function_definition -> attributes_opt type ID ( param_list_opt ) ; .)
    DOCUMENTATION_OPEN reduce using rule 53 (function_definition -> attributes_opt type ID ( param_list_opt ) ; .)
    TYPENAME        reduce using rule 53 (function_definition -> attributes_opt type ID ( param_list_opt ) ; .)
    TYPEDEF         reduce using rule 53 (function_definition -> attributes_opt type ID ( param_list_opt ) ; .)
    CLASS           reduce using rule 53 (function_definition -> attributes_opt type ID ( param_list_opt ) ; .)
    ENUM            reduce using rule 53 (function_definition -> attributes_opt type ID ( param_list_opt ) ; .)
    CALLBACK        reduce using rule 53 (function_definition -> attributes_opt type ID ( param_list_opt ) ; .)
    NAMESPACE       reduce using rule 53 (function_definition -> attributes_opt type ID ( param_list_opt ) ; .)
    VERBATIM_OPEN   reduce using rule 53 (function_definition -> attributes_opt type ID ( param_list_opt ) ; .)
    QUALIFIER       reduce using rule 53 (function_definition -> attributes_opt type ID ( param_list_opt ) ; .)
    ID              reduce using rule 53 (function_definition -> attributes_opt type ID ( param_list_opt ) ; .)
    SIGNED          reduce using rule 53 (function_definition -> attributes_opt type ID ( param_list_opt ) ; .)
    $end            reduce using rule 53 (function_definition -> attributes_opt type ID ( param_list_opt ) ; .)


state 122

    (37) member_definition -> typename_definition .

    COMMENT_OPEN    reduce using rule 37 (member_definition -> typename_definition .)
    }               reduce using rule 37 (member_definition -> typename_definition .)
    [               reduce using rule 37 (member_definition -> typename_definition .)
    DOCUMENTATION_OPEN reduce using rule 37 (member_definition -> typename_definition .)
    ID              reduce using rule 37 (member_definition -> typename_definition .)
    TYPENAME        reduce using rule 37 (member_definition -> typename_definition .)
    TYPEDEF         reduce using rule 37 (member_definition -> typename_definition .)
    CLASS           reduce using rule 37 (member_definition -> typename_definition .)
    ENUM            reduce using rule 37 (member_definition -> typename_definition .)
    CALLBACK        reduce using rule 37 (member_definition -> typename_definition .)
    VERBATIM_OPEN   reduce using rule 37 (member_definition -> typename_definition .)
    QUALIFIER       reduce using rule 37 (member_definition -> typename_definition .)
    SIGNED          reduce using rule 37 (member_definition -> typename_definition .)


state 123

    (36) member_definition -> variable_definition .

    COMMENT_OPEN    reduce using rule 36 (member_definition -> variable_definition .)
    }               reduce using rule 36 (member_definition -> variable_definition .)
    [               reduce using rule 36 (member_definition -> variable_definition .)
    DOCUMENTATION_OPEN reduce using rule 36 (member_definition -> variable_definition .)
    ID              reduce using rule 36 (member_definition -> variable_definition .)
    TYPENAME        reduce using rule 36 (member_definition -> variable_definition .)
    TYPEDEF         reduce using rule 36 (member_definition -> variable_definition .)
    CLASS           reduce using rule 36 (member_definition -> variable_definition .)
    ENUM            reduce using rule 36 (member_definition -> variable_definition .)
    CALLBACK        reduce using rule 36 (member_definition -> variable_definition .)
    VERBATIM_OPEN   reduce using rule 36 (member_definition -> variable_definition .)
    QUALIFIER       reduce using rule 36 (member_definition -> variable_definition .)
    SIGNED          reduce using rule 36 (member_definition -> variable_definition .)


state 124

    (41) member_definition -> callback_definition .

    COMMENT_OPEN    reduce using rule 41 (member_definition -> callback_definition .)
    }               reduce using rule 41 (member_definition -> callback_definition .)
    [               reduce using rule 41 (member_definition -> callback_definition .)
    DOCUMENTATION_OPEN reduce using rule 41 (member_definition -> callback_definition .)
    ID              reduce using rule 41 (member_definition -> callback_definition .)
    TYPENAME        reduce using rule 41 (member_definition -> callback_definition .)
    TYPEDEF         reduce using rule 41 (member_definition -> callback_definition .)
    CLASS           reduce using rule 41 (member_definition -> callback_definition .)
    ENUM            reduce using rule 41 (member_definition -> callback_definition .)
    CALLBACK        reduce using rule 41 (member_definition -> callback_definition .)
    VERBATIM_OPEN   reduce using rule 41 (member_definition -> callback_definition .)
    QUALIFIER       reduce using rule 41 (member_definition -> callback_definition .)
    SIGNED          reduce using rule 41 (member_definition -> callback_definition .)


state 125

    (38) member_definition -> typedef_definition .

    COMMENT_OPEN    reduce using rule 38 (member_definition -> typedef_definition .)
    }               reduce using rule 38 (member_definition -> typedef_definition .)
    [               reduce using rule 38 (member_definition -> typedef_definition .)
    DOCUMENTATION_OPEN reduce using rule 38 (member_definition -> typedef_definition .)
    ID              reduce using rule 38 (member_definition -> typedef_definition .)
    TYPENAME        reduce using rule 38 (member_definition -> typedef_definition .)
    TYPEDEF         reduce using rule 38 (member_definition -> typedef_definition .)
    CLASS           reduce using rule 38 (member_definition -> typedef_definition .)
    ENUM            reduce using rule 38 (member_definition -> typedef_definition .)
    CALLBACK        reduce using rule 38 (member_definition -> typedef_definition .)
    VERBATIM_OPEN   reduce using rule 38 (member_definition -> typedef_definition .)
    QUALIFIER       reduce using rule 38 (member_definition -> typedef_definition .)
    SIGNED          reduce using rule 38 (member_definition -> typedef_definition .)


state 126

    (53) function_definition -> attributes_opt . type ID ( param_list_opt ) ;
    (55) constructor_definition -> attributes_opt . ID ( param_list_opt ) ;
    (52) variable_definition -> attributes_opt . type ID ;
    (51) typename_definition -> attributes_opt . TYPENAME ID ;
    (50) typedef_definition -> attributes_opt . TYPEDEF type ID ;
    (2) class_definition -> attributes_opt . CLASS ID base_class { member_definition_list } ;
    (61) enum_definition -> attributes_opt . ENUM ID { enum_values } ;
    (54) callback_definition -> attributes_opt . CALLBACK type ID ( param_list_opt ) ;
    (46) verbatim_block -> attributes_opt . VERBATIM_OPEN text VERBATIM_CLOSE
    (67) type -> . type_reference
    (68) type -> . QUALIFIER type
    (69) type_reference -> . type_name
    (70) type_reference -> . scoped_type_reference
    (71) type_reference -> . unsized_array_type_reference
    (72) type_reference -> . sized_array_type_reference
    (73) type_reference -> . nullable_type_reference
    (74) type_name -> . ID
    (75) type_name -> . SIGNED ID
    (76) scoped_type_reference -> . ID : : type_reference
    (77) unsized_array_type_reference -> . type_reference [ ]
    (78) sized_array_type_reference -> . type_reference [ NUMBER ]
    (79) nullable_type_reference -> . type_reference ?

    ID              shift and go to state 138
    TYPENAME        shift and go to state 27
    TYPEDEF         shift and go to state 32
    CLASS           shift and go to state 31
    ENUM            shift and go to state 34
    CALLBACK        shift and go to state 42
    VERBATIM_OPEN   shift and go to state 28
    QUALIFIER       shift and go to state 38
    SIGNED          shift and go to state 40

    unsized_array_type_reference   shift and go to state 37
    type_name                      shift and go to state 26
    nullable_type_reference        shift and go to state 39
    scoped_type_reference          shift and go to state 33
    type_reference                 shift and go to state 41
    sized_array_type_reference     shift and go to state 29
    type                           shift and go to state 30

state 127

    (33) member_definition_list -> member_definition_list member_definition . comments
    (43) comments -> . empty
    (44) comments -> . comments comment
    (80) empty -> .

    COMMENT_OPEN    reduce using rule 80 (empty -> .)
    }               reduce using rule 80 (empty -> .)
    [               reduce using rule 80 (empty -> .)
    DOCUMENTATION_OPEN reduce using rule 80 (empty -> .)
    ID              reduce using rule 80 (empty -> .)
    TYPENAME        reduce using rule 80 (empty -> .)
    TYPEDEF         reduce using rule 80 (empty -> .)
    CLASS           reduce using rule 80 (empty -> .)
    ENUM            reduce using rule 80 (empty -> .)
    CALLBACK        reduce using rule 80 (empty -> .)
    VERBATIM_OPEN   reduce using rule 80 (empty -> .)
    QUALIFIER       reduce using rule 80 (empty -> .)
    SIGNED          reduce using rule 80 (empty -> .)

    empty                          shift and go to state 4
    comments                       shift and go to state 139

state 128

    (34) member_definition -> function_definition .

    COMMENT_OPEN    reduce using rule 34 (member_definition -> function_definition .)
    }               reduce using rule 34 (member_definition -> function_definition .)
    [               reduce using rule 34 (member_definition -> function_definition .)
    DOCUMENTATION_OPEN reduce using rule 34 (member_definition -> function_definition .)
    ID              reduce using rule 34 (member_definition -> function_definition .)
    TYPENAME        reduce using rule 34 (member_definition -> function_definition .)
    TYPEDEF         reduce using rule 34 (member_definition -> function_definition .)
    CLASS           reduce using rule 34 (member_definition -> function_definition .)
    ENUM            reduce using rule 34 (member_definition -> function_definition .)
    CALLBACK        reduce using rule 34 (member_definition -> function_definition .)
    VERBATIM_OPEN   reduce using rule 34 (member_definition -> function_definition .)
    QUALIFIER       reduce using rule 34 (member_definition -> function_definition .)
    SIGNED          reduce using rule 34 (member_definition -> function_definition .)


state 129

    (40) member_definition -> enum_definition .

    COMMENT_OPEN    reduce using rule 40 (member_definition -> enum_definition .)
    }               reduce using rule 40 (member_definition -> enum_definition .)
    [               reduce using rule 40 (member_definition -> enum_definition .)
    DOCUMENTATION_OPEN reduce using rule 40 (member_definition -> enum_definition .)
    ID              reduce using rule 40 (member_definition -> enum_definition .)
    TYPENAME        reduce using rule 40 (member_definition -> enum_definition .)
    TYPEDEF         reduce using rule 40 (member_definition -> enum_definition .)
    CLASS           reduce using rule 40 (member_definition -> enum_definition .)
    ENUM            reduce using rule 40 (member_definition -> enum_definition .)
    CALLBACK        reduce using rule 40 (member_definition -> enum_definition .)
    VERBATIM_OPEN   reduce using rule 40 (member_definition -> enum_definition .)
    QUALIFIER       reduce using rule 40 (member_definition -> enum_definition .)
    SIGNED          reduce using rule 40 (member_definition -> enum_definition .)


state 130

    (42) member_definition -> verbatim_block .

    COMMENT_OPEN    reduce using rule 42 (member_definition -> verbatim_block .)
    }               reduce using rule 42 (member_definition -> verbatim_block .)
    [               reduce using rule 42 (member_definition -> verbatim_block .)
    DOCUMENTATION_OPEN reduce using rule 42 (member_definition -> verbatim_block .)
    ID              reduce using rule 42 (member_definition -> verbatim_block .)
    TYPENAME        reduce using rule 42 (member_definition -> verbatim_block .)
    TYPEDEF         reduce using rule 42 (member_definition -> verbatim_block .)
    CLASS           reduce using rule 42 (member_definition -> verbatim_block .)
    ENUM            reduce using rule 42 (member_definition -> verbatim_block .)
    CALLBACK        reduce using rule 42 (member_definition -> verbatim_block .)
    VERBATIM_OPEN   reduce using rule 42 (member_definition -> verbatim_block .)
    QUALIFIER       reduce using rule 42 (member_definition -> verbatim_block .)
    SIGNED          reduce using rule 42 (member_definition -> verbatim_block .)


state 131

    (39) member_definition -> class_definition .

    COMMENT_OPEN    reduce using rule 39 (member_definition -> class_definition .)
    }               reduce using rule 39 (member_definition -> class_definition .)
    [               reduce using rule 39 (member_definition -> class_definition .)
    DOCUMENTATION_OPEN reduce using rule 39 (member_definition -> class_definition .)
    ID              reduce using rule 39 (member_definition -> class_definition .)
    TYPENAME        reduce using rule 39 (member_definition -> class_definition .)
    TYPEDEF         reduce using rule 39 (member_definition -> class_definition .)
    CLASS           reduce using rule 39 (member_definition -> class_definition .)
    ENUM            reduce using rule 39 (member_definition -> class_definition .)
    CALLBACK        reduce using rule 39 (member_definition -> class_definition .)
    VERBATIM_OPEN   reduce using rule 39 (member_definition -> class_definition .)
    QUALIFIER       reduce using rule 39 (member_definition -> class_definition .)
    SIGNED          reduce using rule 39 (member_definition -> class_definition .)


state 132

    (35) member_definition -> constructor_definition .

    COMMENT_OPEN    reduce using rule 35 (member_definition -> constructor_definition .)
    }               reduce using rule 35 (member_definition -> constructor_definition .)
    [               reduce using rule 35 (member_definition -> constructor_definition .)
    DOCUMENTATION_OPEN reduce using rule 35 (member_definition -> constructor_definition .)
    ID              reduce using rule 35 (member_definition -> constructor_definition .)
    TYPENAME        reduce using rule 35 (member_definition -> constructor_definition .)
    TYPEDEF         reduce using rule 35 (member_definition -> constructor_definition .)
    CLASS           reduce using rule 35 (member_definition -> constructor_definition .)
    ENUM            reduce using rule 35 (member_definition -> constructor_definition .)
    CALLBACK        reduce using rule 35 (member_definition -> constructor_definition .)
    VERBATIM_OPEN   reduce using rule 35 (member_definition -> constructor_definition .)
    QUALIFIER       reduce using rule 35 (member_definition -> constructor_definition .)
    SIGNED          reduce using rule 35 (member_definition -> constructor_definition .)


state 133

    (2) class_definition -> attributes_opt CLASS ID base_class { member_definition_list } . ;

    ;               shift and go to state 140


state 134

    (65) enum_value -> ID = NUMBER .

    }               reduce using rule 65 (enum_value -> ID = NUMBER .)
    ,               reduce using rule 65 (enum_value -> ID = NUMBER .)


state 135

    (63) enum_values -> enum_values , enum_value .

    }               reduce using rule 63 (enum_values -> enum_values , enum_value .)
    ,               reduce using rule 63 (enum_values -> enum_values , enum_value .)


state 136

    (61) enum_definition -> attributes_opt ENUM ID { enum_values } ; .

    COMMENT_OPEN    reduce using rule 61 (enum_definition -> attributes_opt ENUM ID { enum_values } ; .)
    }               reduce using rule 61 (enum_definition -> attributes_opt ENUM ID { enum_values } ; .)
    [               reduce using rule 61 (enum_definition -> attributes_opt ENUM ID { enum_values } ; .)
    DOCUMENTATION_OPEN reduce using rule 61 (enum_definition -> attributes_opt ENUM ID { enum_values } ; .)
    ID              reduce using rule 61 (enum_definition -> attributes_opt ENUM ID { enum_values } ; .)
    TYPENAME        reduce using rule 61 (enum_definition -> attributes_opt ENUM ID { enum_values } ; .)
    TYPEDEF         reduce using rule 61 (enum_definition -> attributes_opt ENUM ID { enum_values } ; .)
    CLASS           reduce using rule 61 (enum_definition -> attributes_opt ENUM ID { enum_values } ; .)
    ENUM            reduce using rule 61 (enum_definition -> attributes_opt ENUM ID { enum_values } ; .)
    CALLBACK        reduce using rule 61 (enum_definition -> attributes_opt ENUM ID { enum_values } ; .)
    VERBATIM_OPEN   reduce using rule 61 (enum_definition -> attributes_opt ENUM ID { enum_values } ; .)
    QUALIFIER       reduce using rule 61 (enum_definition -> attributes_opt ENUM ID { enum_values } ; .)
    SIGNED          reduce using rule 61 (enum_definition -> attributes_opt ENUM ID { enum_values } ; .)
    NAMESPACE       reduce using rule 61 (enum_definition -> attributes_opt ENUM ID { enum_values } ; .)
    $end            reduce using rule 61 (enum_definition -> attributes_opt ENUM ID { enum_values } ; .)


state 137

    (54) callback_definition -> attributes_opt CALLBACK type ID ( param_list_opt ) . ;

    ;               shift and go to state 141


state 138

    (55) constructor_definition -> attributes_opt ID . ( param_list_opt ) ;
    (74) type_name -> ID .
    (76) scoped_type_reference -> ID . : : type_reference

    (               shift and go to state 142
    [               reduce using rule 74 (type_name -> ID .)
    ?               reduce using rule 74 (type_name -> ID .)
    ID              reduce using rule 74 (type_name -> ID .)
    :               shift and go to state 63


state 139

    (33) member_definition_list -> member_definition_list member_definition comments .
    (44) comments -> comments . comment
    (45) comment -> . COMMENT_OPEN text COMMENT_CLOSE

    }               reduce using rule 33 (member_definition_list -> member_definition_list member_definition comments .)
    [               reduce using rule 33 (member_definition_list -> member_definition_list member_definition comments .)
    DOCUMENTATION_OPEN reduce using rule 33 (member_definition_list -> member_definition_list member_definition comments .)
    ID              reduce using rule 33 (member_definition_list -> member_definition_list member_definition comments .)
    TYPENAME        reduce using rule 33 (member_definition_list -> member_definition_list member_definition comments .)
    TYPEDEF         reduce using rule 33 (member_definition_list -> member_definition_list member_definition comments .)
    CLASS           reduce using rule 33 (member_definition_list -> member_definition_list member_definition comments .)
    ENUM            reduce using rule 33 (member_definition_list -> member_definition_list member_definition comments .)
    CALLBACK        reduce using rule 33 (member_definition_list -> member_definition_list member_definition comments .)
    VERBATIM_OPEN   reduce using rule 33 (member_definition_list -> member_definition_list member_definition comments .)
    QUALIFIER       reduce using rule 33 (member_definition_list -> member_definition_list member_definition comments .)
    SIGNED          reduce using rule 33 (member_definition_list -> member_definition_list member_definition comments .)
    COMMENT_OPEN    shift and go to state 21

    comment                        shift and go to state 20

state 140

    (2) class_definition -> attributes_opt CLASS ID base_class { member_definition_list } ; .

    COMMENT_OPEN    reduce using rule 2 (class_definition -> attributes_opt CLASS ID base_class { member_definition_list } ; .)
    [               reduce using rule 2 (class_definition -> attributes_opt CLASS ID base_class { member_definition_list } ; .)
    DOCUMENTATION_OPEN reduce using rule 2 (class_definition -> attributes_opt CLASS ID base_class { member_definition_list } ; .)
    TYPENAME        reduce using rule 2 (class_definition -> attributes_opt CLASS ID base_class { member_definition_list } ; .)
    TYPEDEF         reduce using rule 2 (class_definition -> attributes_opt CLASS ID base_class { member_definition_list } ; .)
    CLASS           reduce using rule 2 (class_definition -> attributes_opt CLASS ID base_class { member_definition_list } ; .)
    ENUM            reduce using rule 2 (class_definition -> attributes_opt CLASS ID base_class { member_definition_list } ; .)
    CALLBACK        reduce using rule 2 (class_definition -> attributes_opt CLASS ID base_class { member_definition_list } ; .)
    NAMESPACE       reduce using rule 2 (class_definition -> attributes_opt CLASS ID base_class { member_definition_list } ; .)
    VERBATIM_OPEN   reduce using rule 2 (class_definition -> attributes_opt CLASS ID base_class { member_definition_list } ; .)
    QUALIFIER       reduce using rule 2 (class_definition -> attributes_opt CLASS ID base_class { member_definition_list } ; .)
    ID              reduce using rule 2 (class_definition -> attributes_opt CLASS ID base_class { member_definition_list } ; .)
    SIGNED          reduce using rule 2 (class_definition -> attributes_opt CLASS ID base_class { member_definition_list } ; .)
    $end            reduce using rule 2 (class_definition -> attributes_opt CLASS ID base_class { member_definition_list } ; .)
    }               reduce using rule 2 (class_definition -> attributes_opt CLASS ID base_class { member_definition_list } ; .)


state 141

    (54) callback_definition -> attributes_opt CALLBACK type ID ( param_list_opt ) ; .

    COMMENT_OPEN    reduce using rule 54 (callback_definition -> attributes_opt CALLBACK type ID ( param_list_opt ) ; .)
    }               reduce using rule 54 (callback_definition -> attributes_opt CALLBACK type ID ( param_list_opt ) ; .)
    [               reduce using rule 54 (callback_definition -> attributes_opt CALLBACK type ID ( param_list_opt ) ; .)
    DOCUMENTATION_OPEN reduce using rule 54 (callback_definition -> attributes_opt CALLBACK type ID ( param_list_opt ) ; .)
    TYPENAME        reduce using rule 54 (callback_definition -> attributes_opt CALLBACK type ID ( param_list_opt ) ; .)
    TYPEDEF         reduce using rule 54 (callback_definition -> attributes_opt CALLBACK type ID ( param_list_opt ) ; .)
    CLASS           reduce using rule 54 (callback_definition -> attributes_opt CALLBACK type ID ( param_list_opt ) ; .)
    ENUM            reduce using rule 54 (callback_definition -> attributes_opt CALLBACK type ID ( param_list_opt ) ; .)
    CALLBACK        reduce using rule 54 (callback_definition -> attributes_opt CALLBACK type ID ( param_list_opt ) ; .)
    NAMESPACE       reduce using rule 54 (callback_definition -> attributes_opt CALLBACK type ID ( param_list_opt ) ; .)
    VERBATIM_OPEN   reduce using rule 54 (callback_definition -> attributes_opt CALLBACK type ID ( param_list_opt ) ; .)
    QUALIFIER       reduce using rule 54 (callback_definition -> attributes_opt CALLBACK type ID ( param_list_opt ) ; .)
    ID              reduce using rule 54 (callback_definition -> attributes_opt CALLBACK type ID ( param_list_opt ) ; .)
    SIGNED          reduce using rule 54 (callback_definition -> attributes_opt CALLBACK type ID ( param_list_opt ) ; .)
    $end            reduce using rule 54 (callback_definition -> attributes_opt CALLBACK type ID ( param_list_opt ) ; .)


state 142

    (55) constructor_definition -> attributes_opt ID ( . param_list_opt ) ;
    (56) param_list_opt -> . empty
    (57) param_list_opt -> . param_list
    (80) empty -> .
    (58) param_list -> . param
    (59) param_list -> . param_list , param
    (60) param -> . type ID
    (67) type -> . type_reference
    (68) type -> . QUALIFIER type
    (69) type_reference -> . type_name
    (70) type_reference -> . scoped_type_reference
    (71) type_reference -> . unsized_array_type_reference
    (72) type_reference -> . sized_array_type_reference
    (73) type_reference -> . nullable_type_reference
    (74) type_name -> . ID
    (75) type_name -> . SIGNED ID
    (76) scoped_type_reference -> . ID : : type_reference
    (77) unsized_array_type_reference -> . type_reference [ ]
    (78) sized_array_type_reference -> . type_reference [ NUMBER ]
    (79) nullable_type_reference -> . type_reference ?

    )               reduce using rule 80 (empty -> .)
    QUALIFIER       shift and go to state 38
    ID              shift and go to state 36
    SIGNED          shift and go to state 40

    unsized_array_type_reference   shift and go to state 37
    nullable_type_reference        shift and go to state 39
    param_list                     shift and go to state 95
    type_name                      shift and go to state 26
    scoped_type_reference          shift and go to state 33
    param                          shift and go to state 96
    type_reference                 shift and go to state 41
    param_list_opt                 shift and go to state 143
    sized_array_type_reference     shift and go to state 29
    type                           shift and go to state 98
    empty                          shift and go to state 99

state 143

    (55) constructor_definition -> attributes_opt ID ( param_list_opt . ) ;

    )               shift and go to state 144


state 144

    (55) constructor_definition -> attributes_opt ID ( param_list_opt ) . ;

    ;               shift and go to state 145


state 145

    (55) constructor_definition -> attributes_opt ID ( param_list_opt ) ; .

    COMMENT_OPEN    reduce using rule 55 (constructor_definition -> attributes_opt ID ( param_list_opt ) ; .)
    }               reduce using rule 55 (constructor_definition -> attributes_opt ID ( param_list_opt ) ; .)
    [               reduce using rule 55 (constructor_definition -> attributes_opt ID ( param_list_opt ) ; .)
    DOCUMENTATION_OPEN reduce using rule 55 (constructor_definition -> attributes_opt ID ( param_list_opt ) ; .)
    ID              reduce using rule 55 (constructor_definition -> attributes_opt ID ( param_list_opt ) ; .)
    TYPENAME        reduce using rule 55 (constructor_definition -> attributes_opt ID ( param_list_opt ) ; .)
    TYPEDEF         reduce using rule 55 (constructor_definition -> attributes_opt ID ( param_list_opt ) ; .)
    CLASS           reduce using rule 55 (constructor_definition -> attributes_opt ID ( param_list_opt ) ; .)
    ENUM            reduce using rule 55 (constructor_definition -> attributes_opt ID ( param_list_opt ) ; .)
    CALLBACK        reduce using rule 55 (constructor_definition -> attributes_opt ID ( param_list_opt ) ; .)
    VERBATIM_OPEN   reduce using rule 55 (constructor_definition -> attributes_opt ID ( param_list_opt ) ; .)
    QUALIFIER       reduce using rule 55 (constructor_definition -> attributes_opt ID ( param_list_opt ) ; .)
    SIGNED          reduce using rule 55 (constructor_definition -> attributes_opt ID ( param_list_opt ) ; .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DOCUMENTATION_CLOSE in state 5 resolved as shift
WARNING: shift/reduce conflict for [ in state 107 resolved as shift
WARNING: shift/reduce conflict for ? in state 107 resolved as shift
